{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/admin/adminhome/adminhome.component.ts","./src/app/admin/adminhome/adminhome.component.html","./src/app/admin/adminhome/adminmenus.ts","./src/app/admin/adminlogin/adminlogin.component.ts","./src/app/admin/adminlogin/adminlogin.component.html","./src/app/admin/adminmodel/adminmodel.ts","./src/app/admin/adminregister/adminregister.service.ts","./src/app/admin/adminservice/adminmenu.service.ts","./src/app/admin/viewcomplaint/viewcomplaint.component.ts","./src/app/admin/viewcomplaint/viewcomplaint.component.html","./src/app/admin/viewfarmingtips/viewfarmingtips.component.ts","./src/app/admin/viewfarmingtips/viewfarmingtips.component.html","./src/app/app-routing/app-routing.module.ts","./src/app/app-routing/routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authorization/authorization.component.ts","./src/app/authorization/authorization.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/directives/highlight.directive.ts","./src/app/farmer/addcomplaint/addcomplaint.component.ts","./src/app/farmer/addcomplaint/addcomplaint.component.html","./src/app/farmer/addcomplaint/complaint.service.ts","./src/app/farmer/farmercrop/crophome/crophome.component.ts","./src/app/farmer/farmercrop/crophome/crophome.component.html","./src/app/farmer/farmercrop/cropmenu/cropmenu.component.ts","./src/app/farmer/farmercrop/cropmenu/cropmenu.component.html","./src/app/farmer/farmercrop/cropmenu/cropmenus.ts","./src/app/farmer/farmercrop/cropsell/cropsell.component.ts","./src/app/farmer/farmercrop/cropsell/cropsell.component.html","./src/app/farmer/farmercrop/cropservice.service.ts","./src/app/farmer/farmercrop/updatecrop/updatecrop.component.ts","./src/app/farmer/farmercrop/updatecrop/updatecrop.component.html","./src/app/farmer/farmerhome/farmerhome.component.ts","./src/app/farmer/farmerhome/farmerhome.component.html","./src/app/farmer/farmerhome/farmermenus.ts","./src/app/farmer/farmerlogin/farmerlogin.component.ts","./src/app/farmer/farmerlogin/farmerlogin.component.html","./src/app/farmer/farmerlogout/farmerlogout.component.ts","./src/app/farmer/farmerlogout/farmerlogout.component.html","./src/app/farmer/farmermodel/farmermodel.ts","./src/app/farmer/farmerregister/farmerregister.service.ts","./src/app/farmer/farmerservice/advertisement.service.ts","./src/app/farmer/farmerservice/farmingtipservice.service.ts","./src/app/farmer/farmerservice/menuservice.service.ts","./src/app/farmer/farmersignup/farmersignup.component.ts","./src/app/farmer/farmersignup/farmersignup.component.html","./src/app/farmer/farmingtips/farmingtips.component.ts","./src/app/farmer/farmingtips/farmingtips.component.html","./src/app/farmer/viewadvertisement/table/table.component.ts","./src/app/farmer/viewadvertisement/table/table.component.html","./src/app/farmer/viewadvertisement/viewadvertisement.component.ts","./src/app/farmer/viewadvertisement/viewadvertisement.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/services/aboutus.service.ts","./src/app/services/loginmenu.service.ts","./src/app/shared/aboutuss.ts","./src/app/shared/loginmenus.ts","./src/app/supplier/addadvertisement/addadvertisement.component.ts","./src/app/supplier/addadvertisement/addadvertisement.component.html","./src/app/supplier/deleteadvertisement/deleteadvertisement.component.ts","./src/app/supplier/deleteadvertisement/deleteadvertisement.component.html","./src/app/supplier/suppliercrop/buycrop/buycrop.component.ts","./src/app/supplier/suppliercrop/buycrop/buycrop.component.html","./src/app/supplier/suppliercrop/buycrophome/buycrophome.component.ts","./src/app/supplier/suppliercrop/buycrophome/buycrophome.component.html","./src/app/supplier/suppliercrop/buytransaction/buytransaction.component.ts","./src/app/supplier/suppliercrop/buytransaction/buytransaction.component.html","./src/app/supplier/suppliercrop/suppliercropmenu/suppliercropmenu.component.ts","./src/app/supplier/suppliercrop/suppliercropmenu/suppliercropmenu.component.html","./src/app/supplier/suppliercrop/suppliercropmenu/suppliercropmenus.ts","./src/app/supplier/supplierhome/supplierhome.component.ts","./src/app/supplier/supplierhome/supplierhome.component.html","./src/app/supplier/supplierhome/suppliermenus.ts","./src/app/supplier/supplierlogin/supplierlogin.component.ts","./src/app/supplier/supplierlogin/supplierlogin.component.html","./src/app/supplier/suppliermodel/suppliermodel.ts","./src/app/supplier/supplierregister/supplierregsiter.service.ts","./src/app/supplier/supplierservice/suppliermenu.service.ts","./src/app/supplier/suppliersignup/dialog-elements-example-dialog/dialog-elements-example-dialog.component.ts","./src/app/supplier/suppliersignup/dialog-elements-example-dialog/dialog-elements-example-dialog.component.html","./src/app/supplier/suppliersignup/suppliersignup.component.ts","./src/app/supplier/suppliersignup/suppliersignup.component.html","./src/app/userdetail/userdetail.component.ts","./src/app/userdetail/userdetail.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nimport { AboutUs } from '../shared/aboutus';\nimport { AboutusService } from '../services/aboutus.service';\nimport {MatMenuModule} from '@angular/material/menu';\n\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  \n  aboutus: AboutUs[];\n\n  constructor(private aboutusService: AboutusService) { }\n\n  ngOnInit(): void {\n    this.aboutus = this.aboutusService.getAboutUss();\n  }\n\n}\n","<div class=\"container\"\n  fxLayout=\"column\"\n  fxLayoutGap=\"10px\">\n\n  <div fxFlex>\n    <div>\n        <h3>About Us</h3>\n        <hr>\n    </div>\n  </div>\n\n  <div fxFlex>\n    <div fxLayout=\"column\" fxLayout.gt-sm=\"row\">\n      <div fxFlex=\"70\">\n        <h2>About the website</h2>\n        <p>This is a web based application to help the farmers working with the motive of greater profitability by direct communication between farmer to supplier and supplier to farmer.\n          This integrated system contains the Farmer component ,the Supplier component and the Admin component.\n          It provides an option of login to farmers and communicates to respective suppliers.\n          </p>\n        <p><em>Farmers are notified whenever suppliers publish an advertisement </em>The farmers may also have an option to submit their grievances and complaints to respective dealers or authorities using their farmer login on a separate complaints page and authorities will get access to that page regularly using their login id and passwords.\n        </p>\n      </div>\n      <div fxFlex=\"30\">\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>\n            <h2>Facts At a Glance</h2>\n            </mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <dl>\n              <dt>Started</dt>\n              <dd>3 August. 2020</dd>\n              <dt>Major Stake Holder</dt>\n              <dd>Capgemini India</dd>\n              <dt>Last Year's Turnover</dt>\n              <dd>$1,250,375</dd>\n              <dt>Employees</dt>\n              <dd>5</dd>\n            </dl>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n  \n  <div fxFlex>\n    <mat-card>\n      <blockquote>\n        <h3>“Agriculture is the greatest and fundamentally the most important of our industries. \n          The cities are but the branches of the tree of national life, the roots of which go deeply into the land. \n          We all flourish or decline with the farmer.”</h3>\n        <footer>-- Bernard Baruch,\n          <cite>The Wit and Wisdom of Yogi Berra,\n            P. Pepe, Diversion Books, 2014</cite>\n        </footer>\n      </blockquote>\n    </mat-card>\n  </div>\n\n\n  <div fxFlex>\n    <mat-card>\n    <h2>Team Members</h2>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" >\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>\n        <mat-icon>sentiment_very_satisfied</mat-icon>\n        <span>Harshit Joshi</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>sentiment_very_satisfied</mat-icon>\n        <span>Gaurav Mohanty</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>sentiment_very_satisfied</mat-icon>\n        <span>Reema kumari</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>sentiment_very_satisfied</mat-icon>\n        <span>Yash Raj</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>sentiment_very_satisfied</mat-icon>\n        <span>Manoj Kumar</span>\n      </button>\n    </mat-menu>\n  </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminMenu } from './adminmenu';\nimport { AdminmenuService } from '../adminservice/adminmenu.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-adminhome',\n  templateUrl: './adminhome.component.html',\n  styleUrls: ['./adminhome.component.scss']\n})\nexport class AdminhomeComponent implements OnInit {\n\n  adminmenu: AdminMenu;\n\n  adminmenus: AdminMenu[];\n\n  selectedMenu: AdminMenu;\n\n  constructor(private menuService : AdminmenuService,private _router : Router) { }\n\n  ngOnInit(): void {\n    this.adminmenus = this.menuService.getMenus();\n  }\n\n  onSelect(menu: AdminMenu) {\n    this.selectedMenu = menu;\n  }\n\n  openMenuOption(value) {\n    if(value=== '0'){\n      this._router.navigate(['/viewcomplaint'])\n    }\n    if(value=== '1'){\n      this._router.navigate(['/viewfarmingtips'])\n    }\n  }\n\n}\n","<div class=\"container\"\n     fxLayout=\"column\"\n     fxLayoutGap=\"50px\">\n\n     <div fxFlex>\n        <div>\n          <h2>Admin Menu</h2>\n          <hr>\n        </div>\n      </div>\n  <div fxFlex>\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let adminmenu of adminmenus\"\n        (click)=\"openMenuOption(adminmenu.id)\" appHighlight>\n            <img height=\"200px\" src={{adminmenu.image}} alt={{adminmenu.name}}>\n        <mat-grid-tile-footer>\n          <h1>{{adminmenu.name | uppercase}}</h1>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"end end\" >\n    <button mat-raised-button  color=\"warn\" type=\"submit\" [routerLink]=\"['/home']\" >Logout</button>\n  </div>\n\n  \n</div>\n","import { AdminMenu } from './adminmenu';\r\n\r\nexport const ADMINMENUS: AdminMenu[] = [\r\n    { \r\n      id: '0',\r\n      name: 'View Complaint',\r\n      image: './assets/images/viewcomplaint.png',\r\n      featured: true\r\n    },{\r\n      id: '1',\r\n      name: 'Add Farming Tips',\r\n      image: './assets/images/tips.jpg',\r\n      featured: true\r\n    }\r\n  ];","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { AdminModel } from '../adminmodel/adminmodel';\nimport { AdminregisterService } from '../adminregister/adminregister.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html',\n  styleUrls: ['./adminlogin.component.scss']\n})\nexport class AdminloginComponent implements OnInit {\n\n  admin = new AdminModel();\n  message='';\n\n  adminModel = {username: '', password: '', remember: false};\n  constructor(public dialogRef: MatDialogRef<AdminloginComponent>\n    ,private _service : AdminregisterService\n    ,private _router : Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  onSubmit() {\n    this._service.loginAdmin(this.admin).subscribe(\n      data =>{\n        console.log(\"response received\");\n        this._router.navigate(['/adminhome'])\n        this.dialogRef.close();\n      },\n      error => {\n        console.log(\"exception occured\");\n        this.message=\"Hey! Please enter valid username and password\";\n      }\n\n    );\n    //console.log('User: ', this.user);\n    \n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    Welcome Admin, Login\n  <span class=\"flex-spacer\"></span>\n  <button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n\n<form novalidate #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n  <strong class=\"mat-subheading-1 accent-color\">{{message}}</strong>\n  <mat-dialog-content>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Admin Username\" type=\"text\" [(ngModel)]=\"admin.adminusername\" name=\"adminusername\"  #adminusername=\"ngModel\" required>\n        <mat-icon matSuffix>account_circle</mat-icon>\n        <mat-error *ngIf=\"adminusername.errors?.required\">Username is required</mat-error>\n    \n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Admin Password\" type=\"password\" [(ngModel)]=\"admin.adminpassword\" name=\"adminpassword\" #adminpassword=\"ngModel\" required>\n        <mat-error *ngIf=\"adminpassword.errors?.required\">Password is required</mat-error>\n      </mat-form-field>\n    </p>\n      <mat-checkbox [(ngModel)]=\"adminModel.remember\" name=\"remember\">Remember Me</mat-checkbox>\n    \n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <span class=\"flex-spacer\"></span>\n    <div class=\"example-label\"></div>\n    <div class=\"example-button-row\">\n    <button mat-raised-button mat-dialog-close>Cancel</button>\n    <button  mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.form.invalid\">Login</button>\n  </div>\n  </mat-dialog-actions>\n</form>\n\n","export class AdminModel {\r\n    adminid:number;\r\n    adminusername:string;\r\n    adminpassword:string;\r\n\r\n    constructor(){}\r\n}","import { Injectable } from '@angular/core';\nimport { AdminModel } from '../adminmodel/adminmodel';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminregisterService {\n\n  public errorMessage: string = '';\n  constructor(private _http : HttpClient) { }\n\n  // authentication(data):Observable<any>{\n  //   return this._http.post(\"http://localhost:8080/registration/AdminAuthenticate\",data);\n  // }\n\n\n  public loginAdmin(admin: AdminModel):Observable<any>{\n    return this._http.post<any>(\"http://localhost:8686/register-service/registration/adminlogin\",admin);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AdminMenu } from '../adminhome/adminmenu';\nimport { ADMINMENUS } from '../adminhome/adminmenus';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminmenuService {\n\n  getMenus(): AdminMenu[] {\n    return ADMINMENUS;\n  }\n  getMenu(id: string) : AdminMenu{\n    return ADMINMENUS.filter((menu) =>(menu.id === id))[0];\n}\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ComplaintService } from 'src/app/farmer/addcomplaint/complaint.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-viewcomplaint',\n  templateUrl: './viewcomplaint.component.html',\n  styleUrls: ['./viewcomplaint.component.scss']\n})\nexport class ViewcomplaintComponent implements OnInit {\n\n  complaints;\n  complaint = {\n    id: '',\n    farmerId:'',\n    message:'',\n    status: ''\n\n  }\n  constructor(private cs: ComplaintService,private router:Router) { \n    cs.getAll().subscribe((res)=>this.complaints=res);\n  }\n\n//   updateComplaint(){\n//     this.cs.updateComplaint(this.complaint).subscribe(()=>{alert(\"updated...\")\n//           })\n//  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"jumbotron\" >\n    <h1 class=\"display-4\">Welcome to Complaint Homepage</h1>\n    <p class=\"lead\">These are the details Complaints made by Farmers </p>\n    <hr class=\"my-4\">\n    <p>We hope you are in good health</p>\n    \n  </div>\n \n<table class='table' >\n    <tr>\n        <th>ID</th>\n        <th>Farmer Id</th>\n        <th>Complaint Message</th>\n        <th>Complaint Status</th>\n    </tr>\n    <tr *ngFor=\"let comp of complaints\">\n        <td>{{comp.id}}</td>\n         <td>{{comp.farmerId}}</td>\n         <td>{{comp.message}}</td>\n         <td>{{comp.status}}</td>\n         <td><a routerLink=\"update\" [state]=\"{complaints: comp}\" class=\"btn btn-info\">Update</a></td>\n         <td><button class=\"btn btn-danger\" (click)=\"deleteCrop(crop.id)\">Delete</button></td>\n    </tr>\n</table>\n\n<input type=\"number\"  class=\"form-control\" [(ngModel)]=\"complaint.id\"> -->\n<!-- Complaint Status\n<input type=\"text\"  class=\"form-control\" [(ngModel)]=\"complaint.status\"> -->\n\n<!-- <br>\n<button (click)=\"updateComplaint()\" class=\"btn btn-info\">Save</button> -->\n\n<html>\n<head>\n<style>\n#customers {\n  font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#customers td, #customers th {\n  border: 1px solid rgb(9, 116, 71);\n  padding: 15px;\n}\n\n#customers tr:nth-child(even){background-color: #ffffff;}\n\n#customers tr:hover {background-color: rgb(175, 214, 33);}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: center;\n  background-color: #4CAF50;\n  color: rgb(255, 255, 255);\n}\n</style>\n</head>\n<body>\n\n\n  <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n    <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <mat-toolbar color=\"primary\">\n    <span><img src=\"./assets/images/compl.png\" height=\"90px\" width=\"90px\"></span>\n    <span >&nbsp; &nbsp;</span>\n    <span >View Complaints By Farmers</span>\n  </mat-toolbar>\n  </mat-card>\n\n  <table id=\"customers\">\n    <thead>\n    <tr>\n      <th  class=\"hidden\">Complain ID</th>\n      <th >Farmer ID</th>\n      <th >Mesaage from farmer</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let comp of complaints\">\n      <td >{{comp.id}}</td>\n      <td>{{comp.farmerId}}</td>\n      <td>{{comp.message}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- <div>\n    Complaint ID: \n<input type=\"number\"  class=\"form-control\" [(ngModel)]=\"complaint.id\"> \nComplaint Status :\n<input type=\"text\"  class=\"form-control\" [(ngModel)]=\"complaint.status\">\n\n <br>\n<button (click)=\"updateComplaint()\" class=\"btn btn-info\">Save</button> \n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { FarmingTip } from 'src/app/farmer/farmermodel/farmingtip';\nimport { FarmingtipserviceService } from 'src/app/farmer/farmerservice/farmingtipservice.service';\n\n\n@Component({\n  selector: 'app-viewfarmingtips',\n  templateUrl: './viewfarmingtips.component.html',\n  styleUrls: ['./viewfarmingtips.component.scss']\n})\nexport class ViewfarmingtipsComponent implements OnInit {\n\n  allFarmingtip: FarmingTip[];\n  \n  constructor(public farmingtipService: FarmingtipserviceService) { }\n  \n    ngOnInit() {\n      this.getAllFarmingtip();\n    }\n  \n    getAllFarmingtip() {\n      this.farmingtipService.getAllFarmingtips().subscribe(\n        (data: FarmingTip[]) => {\n          this.allFarmingtip=data;\n        });\n    }\n  \n  \n    edit(tips) {\n      this.farmingtipService.currentFarmingtip = Object.assign({}, tips);\n      \n    }\n  \n    deleteFarmingtip(id: number) {\n       console.log(id);\n    this.farmingtipService.deleteFarmingtip(id).subscribe(\n      (data: FarmingTip) => {\n        this.getAllFarmingtip();\n  });\n  \n    }\n  \n    createAndUpdate(currentFarmingtip : FarmingTip) {\n  \n      console.log(currentFarmingtip);\n      if (currentFarmingtip.id != null) {\n        console.log('update');\n        this.updateFarmingtip(currentFarmingtip);\n      } else {\n        console.log('create');\n        this.createFarmingtip(currentFarmingtip);\n      }\n    }\n  \n    createFarmingtip(tips: FarmingTip) {\n      this.farmingtipService.createFarmingtip(tips).subscribe();\n       }\n  \n    updateFarmingtip(tips: FarmingTip) {\n      this.farmingtipService.updateFarmingtip(tips).subscribe();\n      \n      }\n  \n    clear() {\n      this.farmingtipService.currentFarmingtip = {\n        id: null,\n        tipsMessage: ''\n        \n      };\n    }\n\n}\n","<html>\n<head>\n<style>\n#customers {\n  font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#customers td, #customers th {\n  border: 3px solid #ddd;\n  padding: 30px;\n}\n\n#customers tr:nth-child(even){background-color: #f2f2f2;}\n\n#customers tr:hover {background-color: #ddd;}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: left;\n  background-color: #4CAF50;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n\n\n\n  <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n    <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <mat-toolbar color=\"primary\">\n    <span><img src=\"./assets/images/quicktips.jpg\" class=\"myimg\"></span>\n    <span >&nbsp; &nbsp;</span>\n    <span style=\"font-size:30px; font-family:Arial;\">Add Farming Tips for Farmers</span>\n  </mat-toolbar>\n  </mat-card>\n\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between none\" >\n    <div class=\"col-md-6\">\n      <div class=\"tips-form\">\n        <div class=\"row\">\n        \n          <div  class=\"col-md-9 form-group\">\n          <mat-card >\n            <textarea  rows=\"30\" cols=\"150\" placeholder=\"Tips Message\" class=\"form-control\" [(ngModel)]=\"farmingtipService.currentFarmingtip.tipsMessage\" #tipsMessage=\"ngModel\" [ngClass]=\"{'is-invalid':tipsMessage.invalid}\" required ></textarea>\n            <div *ngIf=\"tipsMessage.invalid\" class=\"invalid-msg\">\n              <div *ngIf=\"tipsMessage.errors.required\" style=\"color:red;\"> <b>Tips Message is Required</b> </div>\n            </div>\n          </mat-card>\n          </div>\n        \n\n          \n        <div  fxLayout=\"column\" fxLayoutAlign=\"space-between none\" >\n         <mat-card  fxLayout=\"row\">\n          <div flex>\n            <button mat-raised-button color=\"accent\" style=\"\n            height: 44px;\n            width: 138px;\" (click)=\"createAndUpdate(farmingtipService.currentFarmingtip)\">\n              <b>SUBMIT</b>\n            </button>\n          </div>\n          \n          <span> &nbsp; &nbsp; </span>\n\n          <div flex>\n            <button class=\"mat-raised-button\" (click)=\"clear()\" style=\"\n            width: 145px;\n            height: 44px;\">\n              <i class=\"fa fa-retweet\"></i>\n              CANCEL\n            </button>\n          </div>\n        </mat-card>\n        </div>\n\n      </div>\n    </div>\n    </div>\n \n    <div class=\"col-md-6\">\n    </div>\n    <div>\n    <table id=\"customers\" >\n      <thead>\n        <tr>\n        <th>Id</th>\n        <th>Tips Message</th>\n        <th>Update</th>\n        <th>Delete</th>\n      </tr>\n      </thead>\n        <tbody>\n         <tr *ngFor=\"let tips of allFarmingtip\">\n          <td>{{tips.id}}</td>\n           <td>{{tips.tipsMessage}}</td>\n        \n           <td>\n             <a class=\"btn\" (click)=\"edit(tips)\">\n               <i class=\"fa fa-edit\"></i>\n             </a>\n            </td>\n             <td>\n             <a class=\"btn text-danger\" (click)=\"deleteFarmingtip(tips.id)\">\n               <i class=\"fa fa-trash\"></i>\n             </a>\n           </td>\n         </tr>\n         </tbody>\n       </table>\n      </div>\n     \n   \n \n        \n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { routes } from './routes';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\r\n\r\nimport { MenuComponent } from '../menu/menu.component';\r\nimport { UserdetailComponent } from '../userdetail/userdetail.component';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { AboutComponent } from '../about/about.component';\r\nimport { ContactComponent } from '../contact/contact.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ViewadvertisementComponent } from '../farmer/viewadvertisement/viewadvertisement.component';\r\nimport { FarmerhomeComponent } from '../farmer/farmerhome/farmerhome.component';\r\nimport { FarmingtipsComponent } from '../farmer/farmingtips/farmingtips.component';\r\nimport { SupplierhomeComponent } from '../supplier/supplierhome/supplierhome.component';\r\nimport { AdminhomeComponent } from '../admin/adminhome/adminhome.component';\r\nimport { AddadvertisementComponent } from '../supplier/addadvertisement/addadvertisement.component'\r\nimport { DeleteadvertisementComponent } from '../supplier/deleteadvertisement/deleteadvertisement.component';\r\nimport { ViewfarmingtipsComponent } from '../admin/viewfarmingtips/viewfarmingtips.component';\r\nimport { CropmenuComponent } from '../farmer/farmercrop/cropmenu/cropmenu.component';\r\nimport { CrophomeComponent } from '../farmer/farmercrop/crophome/crophome.component'\r\nimport { CropsellComponent } from '../farmer/farmercrop/cropsell/cropsell.component';\r\nimport { UpdatecropComponent } from '../farmer/farmercrop/updatecrop/updatecrop.component';\r\nimport { SuppliercropmenuComponent } from '../supplier/suppliercrop/suppliercropmenu/suppliercropmenu.component';\r\nimport { BuycropComponent } from '../supplier/suppliercrop/buycrop/buycrop.component';\r\nimport { BuycrophomeComponent } from '../supplier/suppliercrop/buycrophome/buycrophome.component';\r\nimport { BuytransactionComponent } from '../supplier/suppliercrop/buytransaction/buytransaction.component';\r\nimport { AddcomplaintComponent } from '../farmer/addcomplaint/addcomplaint.component';\r\nimport { ViewcomplaintComponent } from '../admin/viewcomplaint/viewcomplaint.component';\r\n\r\nexport const routes: Routes = [\r\n    { path: 'home',  component: MenuComponent },\r\n    { path: 'contactus', component: ContactComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'aboutus', component: AboutComponent },\r\n    { path: 'userdetail/:id', component: UserdetailComponent },\r\n    { path: 'viewadvertisement', component: ViewadvertisementComponent },\r\n    { path: 'farmerhome', component: FarmerhomeComponent },\r\n    { path: 'farmertips', component: FarmingtipsComponent },\r\n    { path: 'supplierhome', component: SupplierhomeComponent },\r\n    { path: 'adminhome', component: AdminhomeComponent },\r\n    { path: 'addadvertisement', component: AddadvertisementComponent },\r\n    { path: 'deleteadvertisement', component: DeleteadvertisementComponent },\r\n    { path: 'viewfarmingtips', component: ViewfarmingtipsComponent },\r\n    { path: 'cropmenu', component: CropmenuComponent },\r\n    { path: 'crophome', component: CrophomeComponent },\r\n    { path: 'cropsell', component: CropsellComponent },\r\n    { path: 'updatecrop', component: UpdatecropComponent },\r\n    { path: 'suppliercropmenu', component: SuppliercropmenuComponent },\r\n    { path: 'buycrop', component: BuycropComponent },\r\n    { path: 'buycrophome', component: BuycrophomeComponent },\r\n    { path: 'buytransaction', component: BuytransactionComponent },\r\n    { path: 'addcomplaint', component: AddcomplaintComponent },\r\n    { path: 'viewcomplaint', component: ViewcomplaintComponent },\r\n    { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n  ];","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'fas';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar'; \nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms'; \nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatChipsModule} from '@angular/material/chips';\n\nimport 'hammerjs';\nimport { MenuComponent } from './menu/menu.component';\nimport { UserdetailComponent } from './userdetail/userdetail.component';\n\nimport { LoginmenuService } from './services/loginmenu.service';\nimport { AboutusService } from './services/aboutus.service';\nimport { MenuserviceService } from './farmer/farmerservice/menuservice.service';\nimport { FarmingtipserviceService } from './farmer/farmerservice/farmingtipservice.service';\nimport { SupplierregsiterService } from './supplier/supplierregister/supplierregsiter.service';\nimport { SuppliermenuService } from './supplier/supplierservice/suppliermenu.service';\n\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { LoginComponent } from './login/login.component';\nimport { ViewadvertisementComponent } from './farmer/viewadvertisement/viewadvertisement.component';\nimport { FarmersignupComponent } from './farmer/farmersignup/farmersignup.component';\nimport { SuppliersignupComponent } from './supplier/suppliersignup/suppliersignup.component';\nimport { AddadvertisementComponent } from './supplier/addadvertisement/addadvertisement.component';\nimport { SupplierhomeComponent } from './supplier/supplierhome/supplierhome.component';\nimport { FarmerhomeComponent } from './farmer/farmerhome/farmerhome.component';\nimport { FarmerloginComponent } from './farmer/farmerlogin/farmerlogin.component';\nimport { SupplierloginComponent } from './supplier/supplierlogin/supplierlogin.component';\nimport { AdminloginComponent } from './admin/adminlogin/adminlogin.component';\nimport { AdminhomeComponent } from './admin/adminhome/adminhome.component';\nimport { TableComponent } from './farmer/viewadvertisement/table/table.component';\nimport { FarmingtipsComponent } from './farmer/farmingtips/farmingtips.component';\nimport { AdminmenuService } from './admin/adminservice/adminmenu.service';\nimport { AdminregisterService } from './admin/adminregister/adminregister.service';\nimport { DeleteadvertisementComponent } from './supplier/deleteadvertisement/deleteadvertisement.component';\nimport { ViewfarmingtipsComponent } from './admin/viewfarmingtips/viewfarmingtips.component';\nimport { AuthorizationComponent } from './authorization/authorization.component';\nimport { FarmerlogoutComponent } from './farmer/farmerlogout/farmerlogout.component';\nimport { DialogElementsExampleDialogComponent } from './supplier/suppliersignup/dialog-elements-example-dialog/dialog-elements-example-dialog.component';\nimport { CrophomeComponent } from './farmer/farmercrop/crophome/crophome.component';\nimport { CropsellComponent } from './farmer/farmercrop/cropsell/cropsell.component';\nimport { UpdatecropComponent } from './farmer/farmercrop/updatecrop/updatecrop.component';\nimport { CropmenuComponent } from './farmer/farmercrop/cropmenu/cropmenu.component';\nimport { SuppliercropmenuComponent } from './supplier/suppliercrop/suppliercropmenu/suppliercropmenu.component';\nimport { BuycrophomeComponent } from './supplier/suppliercrop/buycrophome/buycrophome.component';\nimport { BuycropComponent } from './supplier/suppliercrop/buycrop/buycrop.component';\nimport { BuytransactionComponent } from './supplier/suppliercrop/buytransaction/buytransaction.component';\nimport { AddcomplaintComponent } from './farmer/addcomplaint/addcomplaint.component';\nimport { ComplaintService } from './farmer/addcomplaint/complaint.service';\nimport { ViewcomplaintComponent } from './admin/viewcomplaint/viewcomplaint.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { HighlightDirective } from './directives/highlight.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    UserdetailComponent,\n    HeaderComponent,\n    FooterComponent,\n    AboutComponent,\n    HomeComponent,\n    ContactComponent,\n    LoginComponent,\n  \n    FarmersignupComponent,\n    SuppliersignupComponent,\n    AddadvertisementComponent,\n    SupplierhomeComponent,\n    FarmerhomeComponent,\n    FarmerloginComponent,\n    SupplierloginComponent,\n    AdminloginComponent,\n    AdminhomeComponent,\n    ViewadvertisementComponent,\n    TableComponent,\n    FarmingtipsComponent,AdminloginComponent,AdminhomeComponent, DeleteadvertisementComponent, ViewfarmingtipsComponent, AuthorizationComponent, FarmerlogoutComponent, DialogElementsExampleDialogComponent, CrophomeComponent, CropsellComponent, UpdatecropComponent, CropmenuComponent, SuppliercropmenuComponent, BuycrophomeComponent, BuycropComponent, BuytransactionComponent, AddcomplaintComponent, ViewcomplaintComponent, HighlightDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatFormFieldModule, \n    MatInputModule,\n    MatCheckboxModule,\n    AppRoutingModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatMenuModule,\n    HttpClientModule,\n    MatTableModule,\n    MatChipsModule,\n    MatStepperModule,\n\n    FormsModule,\n    ReactiveFormsModule \n  ],\n  providers: [ LoginmenuService,AboutusService,MenuserviceService, \n    FarmingtipserviceService, AdminmenuService,AdminregisterService,\n    SupplierregsiterService,SuppliermenuService,ComplaintService ],\n  entryComponents: [FarmersignupComponent,FarmerloginComponent,AdminloginComponent,AddcomplaintComponent,\n    SupplierloginComponent,SuppliersignupComponent,BuycropComponent,BuycrophomeComponent,BuytransactionComponent,\n  ,ViewadvertisementComponent,FarmerhomeComponent, ViewfarmingtipsComponent,CrophomeComponent,CropsellComponent, UpdatecropComponent,\n  FarmingtipsComponent,AdminloginComponent,AdminhomeComponent, AddadvertisementComponent,DeleteadvertisementComponent,CropmenuComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.scss']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>authorization works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\"\n  fxLayout=\"column\"\n  fxLayoutGap=\"10px\">\n\n  <div fxFlex>\n    <div>\n        <h3>Contact Us</h3>\n        <hr>\n    </div>\n  </div>\n\n  <div fxFlex>\n    <h3>Location Information</h3> \n    <div fxLayout=\"column\" fxLayout.gt-sm=\"row\">\n      <div fxFlex=\"50\" fxFlexOffset=\"20px\">\n        <h4>Our Address</h4>\n        <address>\n          121,EPIP Phase II<br>\n          Whitefield, Bangalore<br>\n          INDIA<br>\n          <i class=\"fa fa-phone\"></i>: +91 1234 5678 00<br>\n          <i class=\"fa fa-fax\"></i>: +91 8765 4321 00<br>\n          <i class=\"fa fa-envelope\"></i>: \n                <a href=\"mailto:connect@fas.net\">connect@fas.net</a>\n        </address>\n        <p></p>\n        <div>\n          <a mat-raised-button href=\"tel:+911234567800\"><i class=\"fa fa-phone\"></i> Call</a>\n          <a mat-raised-button><i class=\"fa fa-skype\"></i> Skype</a>\n          <a mat-raised-button href=\"mailto:connect@fas.net\"><i class=\"fa fa-envelope-o\"></i> Email</a>\n        </div>\n        </div>\n      <div fxFlex=\"40\">\n        <h4>Map of our Location</h4>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Directive } from '@angular/core';\nimport { ElementRef, Renderer2, HostListener  } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor(private renderer: Renderer2,private el: ElementRef,) { }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.renderer.addClass(this.el.nativeElement, 'highlight');\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.renderer.removeClass(this.el.nativeElement, 'highlight');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ComplaintService } from '../addcomplaint/complaint.service';\nimport { Router } from '@angular/router';\nimport { ComplaintModel } from 'src/app/shared/complaintmodel';\n\n\n@Component({\n  selector: 'app-addcomplaint',\n  templateUrl: './addcomplaint.component.html',\n  styleUrls: ['./addcomplaint.component.scss']\n})\nexport class AddcomplaintComponent implements OnInit {\n\n  constructor(private cs: ComplaintService, private router:Router) { }\n  complaint = {\n    id:'',\n    farmerId:'',\n    message:'',\n    status:'False'\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  \n  addComplaint(){\n    this.cs.add(this.complaint).subscribe((data)=>{\n      alert(\"added\")\n      this.router.navigate(['addcomplaint'])\n  })\n  \n\n}\n\n\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n\n<div  class=\"col-sm-4\">\n  <mat-card>\n    <h1>Send Complaint</h1>\n  </mat-card>\n</div>\n\n<label>&nbsp;&nbsp;&nbsp;<span></span></label>\n<label>&nbsp;&nbsp;&nbsp;<span></span></label>\n<label>&nbsp;&nbsp;&nbsp;<span></span></label>\n\n<div class=\"col-sm-4\">\n<form class=\"was-validated\" >\n  \n  <mat-chip-list class=\"mat-chip-list-stacked\" aria-label=\"Color selection\">\n    <mat-chip  selected color=\"accent\" style=\"font-size:20px;\">\n     Farmer ID : \n    </mat-chip>\n  </mat-chip-list><br>\n  <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <input matInput  type=\"number\" class=\"form-control\" id=\"farmerID\" placeholder=\"Farmer ID\" #idRef=\"ngModel\" name=\"FarmerID\" [(ngModel)]=\"complaint.farmerId\" required><br>\n      <div *ngIf=\"idRef.errors &&(idRef.dirty || idRef.touched)\">\n        <div [hidden]=\"!idRef.errors.required\">Farmer ID should not be empty</div>\n       </div>\n    </mat-form-field>\n      \n      \n   \n\n      <mat-chip-list class=\"mat-chip-list-stacked\" aria-label=\"Color selection\">\n        <mat-chip  selected color=\"accent\" style=\"font-size:20px;\">\n          Complaint Message :\n        </mat-chip>\n      </mat-chip-list><br>\n        <textarea cols=\"50\" rows=\"12\" type=\"text\" class=\"form-control\" id=\"complaintMessage\" #messageRef=\"ngModel\" placeholder=\"Complaint Message\" name=\"complaintMessage\" [(ngModel)]=\"complaint.message\" required></textarea><br>\n        <div *ngIf=\"messageRef.errors &&(messageRef.dirty || messageRef.touched)\">\n          <div [hidden]=\"!messageRef.errors.required\">Complaint Message should not be empty</div>\n         </div>\n        \n      \n        <label>&nbsp;&nbsp;&nbsp;<span></span></label>\n        <div class=\"example-button-row\">\n        <button mat-raised-button color=\"primary\" type=\"submit\"  class=\"btn btn-primary\"(click)=\"addComplaint()\" [disabled]=\"messageRef.invalid\"  >Submit</button>\n        </div>\n\n\n        \n        </form> \n  </div>\n  </div>\n</div>\n\n\n<!-- <form action=\"/action_page.php\" class=\"was-validated\">\n  <div class=\"form-group\">\n    <label for=\"farmerId\">Farmer ID</label>\n    <input type=\"number\" class=\"form-control\" id=\"farmerID\" placeholder=\"Farmer ID\" name=\"FarmerID\" [(ngModel)]=\"complaint.farmerId\" required>\n    <div class=\"valid-feedback\">Valid.</div>\n    <div class=\"invalid-feedback\">Please fill out this field.</div>\n  </div>\n    <div class=\"form-group\">\n      <label for=\"complaintMessage\">Complaint Message</label>\n      <input type=\"text\" class=\"form-control\" id=\"complaintMessage\" placeholder=\"Complaint Message\" name=\"complaintMessage\" [(ngModel)]=\"complaint.message\" required>\n      <div class=\"valid-feedback\">Valid.</div>\n      <div class=\"invalid-feedback\">Please fill out this field.</div>\n    </div>\n   \n        \n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addComplaint()\" >Submit</button>\n  </form>  -->","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComplaintModel } from 'src/app/shared/complaintmodel';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComplaintService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getAll(){\n    return this.http.get('http://localhost:3000/complaints')\n  }\n\n  // updateComplaint(complaint){\n  //   let opt=new HttpHeaders({'Content-type':'application/json'})\n  //   return this.http.put('http://localhost:3000/complaints/'+complaint.id,complaint,{headers:opt});\n  // }\n\n  add(complaint){\n    let opt=new HttpHeaders({'Content-Type':'application/json'})\n    return this.http.post('http://localhost:3000/complaints',complaint,{headers:opt})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CropserviceService } from '../cropservice.service';\nimport { CropsModel } from 'src/app/shared/crops';\n\n@Component({\n  selector: 'app-crophome',\n  templateUrl: './crophome.component.html',\n  styleUrls: ['./crophome.component.scss']\n})\nexport class CrophomeComponent implements OnInit {\n\n  crops;\n  cropId;\n  \n    constructor(private cs: CropserviceService,private router:Router) { \n      cs.getAll().subscribe((res)=>this.crops=res);\n    }\n  \n  \n    deleteCrop(cropId){\n      this.cs.deleteCrop(cropId).subscribe(()=>{alert(\"deleted...\")\n     history.go()\n     });\n    \n    }\n  \n  \n  \n  \n  \n    ngOnInit() {\n      \n  \n    }\n\n}\n","\n\n<html>\n    <head>\n    <style>\n    #customers {\n      font-family:  Didot,Arial, Helvetica, sans-serif;\n      border-collapse: collapse;\n      width: 100%;\n    }\n    \n    #customers td, #customers th {\n      border: 4px solid #ddd;\n      padding: 8px;\n    }\n    \n    #customers tr:nth-child(even){background-color: #f2f2f2;}\n    \n    #customers tr:hover {background-color: rgb(174, 224, 94);}\n    \n    #customers th {\n      padding-top: 12px;\n      padding-bottom: 12px;\n      text-align: center;\n      background-color: #4CAF50;\n      color: white;\n    }\n    </style>\n    </head>\n    <body>\n    \n\n        <mat-card>\n            <mat-toolbar color=\"primary\">\n              <span><img src=\"./assets/images/home.jpg\" height=\"80px\" width=\"100px\"></span>\n              <span>&nbsp; &nbsp;</span>\n              Welcome to Crops Selling Home page\n              <span class=\"flex-spacer\"></span>\n            </mat-toolbar>\n          </mat-card>\n \n<table class='table' id=\"customers\">\n    <tr>\n        <th>Farmer ID</th>\n        <th>Crop Name</th>\n        <th>Crop Price</th>\n        <th>Crop Quantity</th>\n    </tr>\n    <tr *ngFor=\"let crop of crops\">\n        <td>{{crop.id}}</td>\n         <td>{{crop.name}}</td>\n         <td>{{crop.price}}</td>\n         <td>{{crop.quantity}}</td>\n         <td><button mat-raised-button color=\"primary\" [routerLink]=\"['/updatecrop']\" [state]=\"{crops: crop}\" class=\"btn btn-info\">Update</button></td>\n         <td><button mat-raised-button color=\"warn\" class=\"btn btn-danger\" (click)=\"deleteCrop(crop.id)\">Delete</button></td>\n    </tr>\n</table>\n\n\n\n<button mat-raised-button  [routerLink]=\"['/cropsell']\" class=\"btn btn-primary\">Sell</button>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { CropMenu } from '../cropmenu/cropmenu';\nimport { CROPMENUS } from '../cropmenu/cropmenus';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cropmenu',\n  templateUrl: './cropmenu.component.html',\n  styleUrls: ['./cropmenu.component.scss']\n})\nexport class CropmenuComponent implements OnInit {\n\n  cropmenus: CropMenu[];\n\nselectecropMenu: CropMenu;\n\n  constructor(private _router : Router) { }\n\n  ngOnInit(){\n    this.cropmenus = this.getmenus();\n  }\n\n  onSelect(menuoption: CropMenu) {\n    this.selectecropMenu = menuoption;\n  }\n\n  openMenuOption(value) {\n    if(value=== '0'){\n      this._router.navigate(['/crophome'])\n    }\n    if(value=== '1'){\n      this._router.navigate(['/cropsell'])\n    }\n    \n  }\n\n  getmenus(): CropMenu[] {\n    return CROPMENUS;\n  }\n\n}\n","<div class=\"container\"\n     fxLayout=\"column\"\n     fxLayoutGap=\"10px\">\n\n     <div fxFlex>\n       <mat-card >\n        <mat-toolbar color=\"primary\">\n          <mat-icon>menu</mat-icon>\n        <div >\n         <span > <h1>Sell Crops</h1> </span>\n        </div>\n      </mat-toolbar>\n      </mat-card>\n      \n      </div>\n    \n  <div fxFlex>\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n        <mat-grid-tile *ngFor=\"let cropmenu of cropmenus\" (click)=\"openMenuOption(cropmenu.id)\" appHighlight>\n            <img width=\"400px\" height=\"400px\" src={{cropmenu.image}} alt={{cropmenu.name}}>\n        <mat-grid-tile-footer>\n          <h1 >{{cropmenu.name | uppercase}}</h1>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n</div>\n","import { CropMenu } from './cropmenu';\r\n\r\nexport const CROPMENUS: CropMenu[] = [\r\n    { \r\n      id: '0',\r\n      name: 'Crop Home',\r\n      image: '/assets/images/cropmenu.jpg',\r\n      featured: true\r\n    },{\r\n      id: '1',\r\n      name: 'Crop Sell',\r\n      image: '/assets/images/sellcropjpg.jpg',\r\n      featured: true\r\n    }\r\n  ];","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CropserviceService } from '../cropservice.service';\nimport { CropsModel } from 'src/app/shared/crops';\n\n@Component({\n  selector: 'app-cropsell',\n  templateUrl: './cropsell.component.html',\n  styleUrls: ['./cropsell.component.scss']\n})\nexport class CropsellComponent implements OnInit {\n  constructor(private cs:CropserviceService, private router:Router) {\n    \n  }\n crops = {\n   id:'',\n   name:'',\n   price:'',\n   quantity:''\n }\n \n \n ngOnInit(): void {\n }\n \n sellCrop(){\n   this.cs.add(this.crops).subscribe(()=>{\n     alert(\"added\")\n })\n\n }\n\n}\n","\n\n<mat-card>\n  <mat-toolbar color=\"primary\">\n    <span><img src=\"./assets/images/sell.jpg\" height=\"80px\" width=\"100px\"></span>\n    <span>&nbsp; &nbsp;</span>\n    Sell Crops From Here\n    <span class=\"flex-spacer\"></span>\n  </mat-toolbar>\n</mat-card>\n\n\n<span>&nbsp; &nbsp;</span>\n\n<div style=\"margin-left: 30px;\">\n<form action=\"/action_page.php\">\n\n  <div class=\"form-group\">\n    <mat-form-field appearance=\"outline\">\n    <mat-label for=\"cropName\">Farmer ID</mat-label>\n    <input matInput type=\"number\"  class=\"form-control\" id=\"farmerID\" placeholder=\"Farmer ID\" #idRef=\"ngModel\" name=\"FarmerID\" [(ngModel)]=\"crops.id\" required>\n    <div *ngIf=\"idRef.errors &&(idRef.dirty || idRef.touched)\">\n      <div [hidden]=\"!idRef.errors.required\">Farmer ID should not be empty</div>\n      </div>  \n    </mat-form-field> \n  </div>\n\n\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n      <mat-label >Crop Name:</mat-label>\n      <input matInput type=\"text\"   class=\"form-control\" id=\"cropName\" placeholder=\"Crop Name\" #nameRef=\"ngModel\" name=\"cropName\" [(ngModel)]=\"crops.name\" required>\n      <div *ngIf=\"nameRef.errors &&(nameRef.dirty || nameRef.touched)\">\n        <div [hidden]=\"!nameRef.errors.required\">Crop Name should not be empty</div>\n       </div>\n      </mat-form-field>\n    </div>\n\n\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"cropPrice\">Price:</mat-label>\n        <input  matInput type=\"number\" class=\"form-control\" id=\"cropPrice\" placeholder=\"Crop Price\" #priceRef=\"ngModel\" name=\"cropPrice\" [(ngModel)]=\"crops.price\" required>\n        <div *ngIf=\"priceRef.errors &&(priceRef.dirty || priceRef.touched)\">\n          <div [hidden]=\"!priceRef.errors.required\">Crop Price should not be empty</div>\n         </div>\n        </mat-form-field>\n      </div>\n\n      <div class=\"form-group\">\n        <mat-form-field appearance=\"outline\">\n        <mat-label for=\"cropQuantity\">Quantity:</mat-label>\n        <input matInput type=\"number\" class=\"form-control\" id=\"cropQuantity\" placeholder=\"Crop Price\" #quantityRef=\"ngModel\" name=\"cropQuantity\" [(ngModel)]=\"crops.quantity\" required>\n        <div *ngIf=\"quantityRef.errors &&(quantityRef.dirty || quantityRef.touched)\">\n          <div [hidden]=\"!quantityRef.errors.required\">Crop Quantity should not be empty</div>\n         </div>\n        </mat-form-field>\n      </div>\n        \n    <button mat-raised-button color=\"warn\" type=\"submit\" class=\"btn btn-primary\" (click)=\"sellCrop()\" [disabled]=\"nameRef.invalid\" [disabled]=\"quantityRef.invalid\" [disabled]=\"idRef\" >Submit</button>\n  </form> \n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { getAllLifecycleHooks } from '@angular/compiler/src/lifecycle_reflector';\n\n\nconst headerOption = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CropserviceService {\n  \n\n  private userUrl;\n\n  constructor(private http:HttpClient) {}\n\n   getAll(){\n     return this.http.get('http://localhost:3000/crops')\n   }\n\n   add(crop){\n    let opt=new HttpHeaders({'Content-Type':'application/json'})\n    return this.http.post('http://localhost:3000/crops',crop,{headers:opt})\n  }\n   updateCrop(crops){\n     let opt=new HttpHeaders({'Content-type':'application/json'})\n     return this.http.put('http://localhost:3000/crops/'+crops.id,crops,{headers:opt});\n   }\n\n   deleteCrop(cropId){\n    return this.http.delete('http://localhost:3000/crops/'+cropId)\n  }\n\n    buyCrops(crop){\n    let opt=new HttpHeaders({'Content-Type':'application/json'})\n    \n    return this.http.post('http://localhost:3000/buyCrop',crop,{headers:opt})\n  }\n\n  getBuyAll(){\n    return this.http.get('http://localhost:3000/buyCrop')\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CropserviceService } from '../cropservice.service';\nimport { Router } from '@angular/router';\nimport { CropsModel } from 'src/app/shared/crops';\nimport {MatStepperModule} from '@angular/material/stepper';\n\n\n@Component({\n  selector: 'app-updatecrop',\n  templateUrl: './updatecrop.component.html',\n  styleUrls: ['./updatecrop.component.scss']\n})\nexport class UpdatecropComponent implements OnInit {\n\n  crop;\n  constructor(private cs:CropserviceService,private router:Router) {\n    this.crop=history.state.crops;\n   }\n\n   updateCrop(){\n    this.cs.updateCrop(this.crop).subscribe((data)=>{\n      console.log(data)\n      alert(\"updated...\")\n})\n }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-toolbar color=\"primary\">\n      <span>&nbsp; &nbsp;</span> Update Crops From Here\n      <span class=\"flex-spacer\">\n\n      </span>\n    </mat-toolbar>\n  </mat-card>\n\n  <span>&nbsp; &nbsp;</span>\n\n  <div>\n    Farmer ID :\n<input matInput type=\"number\" class=\"form-control\" [(ngModel)]=\"crop.id\">\n</div>\n\n<div>\nCrop Name :\n<input type=\"text\"  class=\"form-control\" [(ngModel)]=\"crop.name\">\n</div>\n\n<div>\nCrop Price :\n<input type=\"number\" class=\"form-control\" [(ngModel)]=\"crop.price\">\n</div>\n\n<div>\nCrop Quantity :\n<input type=\"number\" class=\"form-control\"[(ngModel)]=\"crop.quantity\">\n</div>\n\n<div>\n<button mat-raised-button (click)=\"updateCrop()\" class=\"btn btn-info\">Save</button>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FarmerMenu } from './farmermenu';\nimport { MenuserviceService } from '../farmerservice/menuservice.service';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-farmerhome',\n  templateUrl: './farmerhome.component.html',\n  styleUrls: ['./farmerhome.component.scss']\n})\nexport class FarmerhomeComponent implements OnInit {\n\n  farmermenu: FarmerMenu;\n\n  farmermenus: FarmerMenu[];\n\n  selectedMenu: FarmerMenu;\n  \n\n  constructor(private menuService : MenuserviceService,private _router : Router) { }\n\n  ngOnInit(): void {\n    this.farmermenus = this.menuService.getMenus();\n  }\n\n  onSelect(menu: FarmerMenu) {\n    this.selectedMenu = menu;\n  }\n\n  openMenuOption(value) {\n    if(value=== '0'){\n      this._router.navigate(['/viewadvertisement'])\n    }\n    if(value=== '1'){\n      this._router.navigate(['/cropmenu'])\n    }\n    if(value=== '2'){\n      this._router.navigate(['/farmertips'])\n    }\n    if(value=== '3'){\n      this._router.navigate(['/addcomplaint'])\n    }\n    \n  }\n\n\n}\n","<div class=\"container\"\n     fxLayout=\"column\"\n     fxLayoutGap=\"50px\">\n\n     <div fxFlex>\n          <mat-card>\n            <div>\n              <mat-toolbar color=\"primary\">\n            <mat-icon>menu</mat-icon>\n            <span>&nbsp; &nbsp; &nbsp;</span>\n             <span><h1>Farmer Menu</h1></span>\n             </mat-toolbar>\n          </div>\n        </mat-card>\n      </div>\n\n  <div fxFlex >\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n      <mat-grid-tile-header>\n        <h3></h3>\n        </mat-grid-tile-header >\n        <mat-grid-tile  *ngFor=\"let farmermenu of farmermenus\" (click)=\"openMenuOption(farmermenu.id)\" appHighlight>\n            <img height=\"400px\" src={{farmermenu.image}} alt={{farmermenu.name}}>\n        <mat-grid-tile-footer>\n          <h1>{{farmermenu.name | uppercase}}</h1>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"end end\" >\n  <button mat-raised-button  color=\"warn\" type=\"submit\" [routerLink]=\"['/home']\" >Logout</button>\n</div>\n\n</div>\n","import { FarmerMenu } from './farmermenu';\r\n\r\nexport const FARMERMENUS: FarmerMenu[] = [\r\n    { \r\n      id: '0',\r\n      name: 'View Advertisement',\r\n      image: './assets/images/advertisement.jpg',\r\n      featured: true\r\n    },{\r\n      id: '1',\r\n      name: 'Sell Crops',\r\n      image: './assets/images/sell.jpg',\r\n      featured: true\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Farming Tips',\r\n      image: './assets/images/tips.jpg',\r\n      featured: true\r\n    },\r\n    {\r\n        id: '3',\r\n        name: 'Send Complaint',\r\n        image: './assets/images/addcomplaint.jpeg',\r\n        featured: true\r\n      }\r\n  ];","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FarmerregisterService } from '../farmerregister/farmerregister.service';\nimport { FarmerModel } from '../farmermodel/farmermodel';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-farmerlogin',\n  templateUrl: './farmerlogin.component.html',\n  styleUrls: ['./farmerlogin.component.scss']\n})\nexport class FarmerloginComponent implements OnInit {\n\n  farmer = new FarmerModel();\n  message='';\n \n\n  farmerModel = {username: '', password: '', remember: false};\n\n  constructor(public dialogRef: MatDialogRef<FarmerloginComponent>\n    ,private _service : FarmerregisterService\n    ,private _router : Router) { }\n\n\n  ngOnInit(): void {\n  }\n\n \n  onSubmit() {\n    this._service.loginFarmer(this.farmer).subscribe(\n      data =>{\n        console.log(\"response received\");\n        this._router.navigate(['/farmerhome'])\n        this.dialogRef.close();\n      },\n      error => {\n        console.log(\"exception occured\");\n        this.message=\"Hey! Please enter valid username and password\";\n      }\n\n    );\n    //console.log('User: ', this.user);\n    \n  }\n\n\n}\n","<mat-toolbar color=\"primary\">\n  <span> &nbsp; &nbsp; </span>\n  Welcome Farmer!\n  <span class=\"flex-spacer\"></span>\n  <span> &nbsp; &nbsp;</span>\n  <button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n\n<form novalidate #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n  <strong class=\"mat-subheading-1 accent-color\">{{message}}</strong>\n  <mat-dialog-content>\n    <p>\n      <mat-form-field>\n        \n        <input matInput placeholder=\"Farmer Username\" type=\"text\" [(ngModel)]=\"farmer.farmerusername\" name=\"farmerusername\"  #farmerusername=\"ngModel\" required>\n        <mat-icon matSuffix>account_circle</mat-icon>\n        <mat-error *ngIf=\"farmerusername.errors?.required\">Farmer Username is required</mat-error>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Farmer Password\" type=\"password\" [(ngModel)]=\"farmer.farmerpassword\" name=\"farmerpassword\" #farmerpassword=\"ngModel\" required>\n        <mat-error *ngIf=\"farmerpassword.errors?.required\">Farmer Password is required</mat-error>\n      </mat-form-field>\n    </p>\n      <mat-checkbox [(ngModel)]=\"farmerModel.remember\" name=\"remember\">Remember Me</mat-checkbox>\n    \n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <span class=\"flex-spacer\"></span>\n    <div class=\"example-label\"></div>\n    <div class=\"example-button-row\">\n    <button mat-raised-button mat-dialog-close>Cancel</button>\n    <button mat-raised-button color=\"primary\"  type=\"submit\" [disabled]=\"loginForm.form.invalid\">Login</button>\n  </div>\n  </mat-dialog-actions>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-farmerlogout',\n  templateUrl: './farmerlogout.component.html',\n  styleUrls: ['./farmerlogout.component.scss']\n})\nexport class FarmerlogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>farmerlogout works!</p>\n","export class FarmerModel {\r\n    farmerid:number;\r\n    farmername:string;\r\n    farmerpassword:string;\r\n    farmeraddress:string;\r\n    farmerphoneno:string;\r\n    farmerusername:string;\r\n\r\n    constructor(){}\r\n}","import { Injectable } from '@angular/core';\nimport { FarmerModel } from '../farmermodel/farmermodel';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FarmerregisterService {\n\n\n  public errorMessage: string = '';\n  constructor(private _http : HttpClient) { }\n\n  public loginFarmer(farmer: FarmerModel):Observable<any>{\n    return this._http.post<any>(\"http://localhost:8686/register-service/registration/farmerlogin\",farmer);\n  }\n\n  public registerFarmer(farmer: FarmerModel):Observable<any>{\n    return this._http.post<any>(\"http://localhost:8686/register-service/registration/farmersignup\",farmer);\n  }\n\n  public handleError = (error: HttpErrorResponse) => {\n    if(error.status === 500){\n      this.handle500Error(error);\n    }\n    else if(error.status === 404){\n      this.handle404Error(error)\n    }\n    else{\n     this.handleOtherError(error);\n    }\n  }\n\n  private handle500Error = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private handle404Error = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private handleOtherError = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n    //TODO: this will be fixed later;\n  }\n\n  public createErrorMessage(error: HttpErrorResponse){\n    return this.errorMessage = error.error ? error.error : error.statusText;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Advertisement} from \"../farmermodel/advertisementmodel\";\nimport { Observable } from \"rxjs\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvertisementService {\n\n  constructor(private http: HttpClient) { }\n\n  //baseUrl: string = 'http://localhost:9001/advertisement';\n //baseUrl: string = 'http://localhost:8080/advertisement';\n\n\n\n\n  getAllAdvertisements() {\n   \n    return this.http.get<Advertisement[]>(\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/getAdvertisements\");\n  }\n\n  createAdvertisement(advertisement: Advertisement): Observable<any>{\n   // const httpOptions ={headers: new HttpHeaders({'Content-Type':'application/json'})}\n    return this.http.post<String>(\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/postAdvertisement\", advertisement);\n  }\n  \n\n  deleteAdvertisement(id:number){\n    return this.http.delete(`${\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/deleteAdvertisement\"}/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FarmingTip } from '../farmermodel/farmingtip';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FarmingtipserviceService {\n\n  // mockUrl: string = 'http://localhost:3000/Farmingtip';\n\n  currentFarmingtip: FarmingTip = {\n  tipsMessage: '',\n  id: null\n  \n}\n\n  constructor( private http: HttpClient) { }\n\n  getAllFarmingtips():Observable<FarmingTip[]> {\n    \n    return this.http.get<FarmingTip[]>(\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/viewAllTips\");\n  }\n     \n\n  deleteFarmingtip(id: number): Observable<FarmingTip> {\n    return this.http.delete<FarmingTip>(\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/deleteTip\" + '/' + id);\n  }\n\n\n  createFarmingtip(tips: FarmingTip): Observable<FarmingTip> {\n    return this.http.post<FarmingTip>(\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/addTip\", tips);\n  }\n\n  updateFarmingtip(tips: FarmingTip): Observable<FarmingTip> {\n    return this.http.put<FarmingTip>(\"http://localhost:8686/farmerconsumermicro-service/ConsumerCtrl/updateTip\" + '/' + tips.id, tips);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FarmerMenu } from '../farmerhome/farmermenu';\nimport { FARMERMENUS } from '../farmerhome/farmermenus';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuserviceService {\n\n  getMenus(): FarmerMenu[] {\n    return FARMERMENUS;\n  }\n  getMenu(id: string) : FarmerMenu{\n    return FARMERMENUS.filter((menu) =>(menu.id === id))[0];\n}\n\n  constructor() { }\n}\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl,FormsModule, ReactiveFormsModule,NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FarmerregisterService } from '../farmerregister/farmerregister.service';\nimport { FarmerModel } from '../farmermodel/farmermodel';\nimport { Router } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-farmersignup',\n  templateUrl: './farmersignup.component.html',\n  styleUrls: ['./farmersignup.component.scss']\n})\nexport class FarmersignupComponent implements OnInit {\n\n\n    message='';\n    farmer = new FarmerModel();\n    //registerForm: FormGroup;\n    @ViewChild('registerForm') private registerForm: NgForm;\n    \n    hide = true;\n    confirmpassword  = this.farmer.farmerpassword;\n\n  constructor(private formBuilder: FormBuilder,private _router : Router,private _service : FarmerregisterService\n    ,private errorService: FarmerregisterService) {\n     }\n\n  ngOnInit(): void {\n      \n  }\n\n\n  // convenience getter for easy access to form fields\n  \n\n  onSubmit() {\n      this._service.registerFarmer(this.farmer).subscribe(\n        data =>{\n            console.log(\"response received\");\n            alert('Registration Successful!');\n            this.registerForm.resetForm(); \n            \n            \n          },error => {\n            console.log(\"exception occured\");\n            this.message=\"Username already exists\";\n          }\n  \n      )    \n      \n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  Sign up as a Farmer!\n  <span class=\"flex-spacer\"></span>\n  <span> &nbsp; &nbsp;</span>\n  <button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n\n<!-- main app container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n\n          <strong class=\"mat-subheading-1 accent-color\">{{message}}</strong>\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Farmer Name :</mat-label>\n              <input matInput type=\"text\" class=\"form-control\" placeholder=\"Farmer Name\" name=\"farmername\"\n                [(ngModel)]=\"farmer.farmername\" #farmername=\"ngModel\" required>\n              <mat-icon matSuffix>sentiment_satisfied_alt</mat-icon>\n              <div *ngIf=\"(farmername.invalid && farmername.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"farmername.errors.required\">Full name is required.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Farmer Username :</mat-label>\n              <input matInput type=\"text\" class=\"form-control\" placeholder=\"Farmer Username\" name=\"farmerusername\"\n                [(ngModel)]=\"farmer.farmerusername\" #farmerusername=\"ngModel\" required>\n              <mat-icon matSuffix>account_circle</mat-icon>\n              <div *ngIf=\"(farmerusername.invalid && farmerusername.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"farmerusername.errors.required\">Username name is required.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Password :</mat-label>\n              <input matInput [type]=\"hide ? 'password' : 'text'\" class=\"form-control\" placeholder=\"Password\"  name=\"farmerpassword\"\n                [(ngModel)]=\"farmer.farmerpassword\" #farmerpassword=\"ngModel\" minlength=\"6\" required>\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </button>\n              <div *ngIf=\"farmerpassword.invalid && farmerpassword.touched\" class=\"alert alert-danger\">\n                <small *ngIf=\"farmerpassword.errors.required\">Password is required.</small>\n                <small *ngIf=\"farmerpassword.errors.minlength\">Password must be longer than 6 characters.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <!--<div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Confirm Password :</mat-label>\n              <input matInput placeholder=\"Confirm Password\" [type]=\"hide ? 'password' : 'text'\" name=\"confirmpassword\"\n                (ngModel)=\"farmer.farmerpassword\" #farmerpassword=\"ngModel\" required>\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </button>\n              <div class=\"alert alert-danger\">\n                <small *ngIf=\"confirmpassword.value != farmerpassword.value\">Password do not match</small>\n                <small *ngIf=\"confirmpassword.errors.required\">Password is required.</small>\n              </div>\n            </mat-form-field>\n          </div>-->\n\n          <div class=\"form-group\">\n            <mat-form-field>\n              <label>Farmer Address :</label>\n              <textarea matInput rows=\"10\" type=\"text\" name=\"farmeraddress\" [(ngModel)]=\"farmer.farmeraddress\"\n                #farmeraddress=\"ngModel\" required></textarea>\n                <div *ngIf=\"(farmeraddress.invalid && farmeraddress.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"farmeraddress.errors.required\">Farmer Address is required.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Phone Number :</mat-label>\n              <input matInput placeholder=\"Phone Number\" type=\"tel\" name=\"farmerphoneno\" pattern=\"[0-9]*\"\n                [(ngModel)]=\"farmer.farmerphoneno\" #farmerphoneno=\"ngModel\" required />\n              <mat-icon matSuffix> call</mat-icon>\n              <div *ngIf=\"(farmerphoneno.invalid && farmerphoneno.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"farmerphoneno.errors.required\">Phone number is required.</small>\n                <small *ngIf=\"farmerphoneno.errors.pattern\">Phone number is invalid.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <div class=\"example-label\"></div>\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" class=\"btn btn-primary\"\n              [disabled]=\"registerForm.invalid\">Sign Up</button>\n          </div>\n\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FarmingTip } from '../farmermodel/farmingtip';\nimport { FarmingtipserviceService } from '../farmerservice/farmingtipservice.service';\n\n@Component({\n  selector: 'app-farmingtips',\n  templateUrl: './farmingtips.component.html',\n  styleUrls: ['./farmingtips.component.scss']\n})\nexport class FarmingtipsComponent implements OnInit {\n\n  allFarmingtip: FarmingTip[];\n\n  constructor(public farmingtipService: FarmingtipserviceService) { }\n\n  ngOnInit() {\n    this.getAllFarmingtip();\n  }\n\n  getAllFarmingtip() {\n    this.farmingtipService.getAllFarmingtips().subscribe(\n      (data: FarmingTip[]) => {\n        this.allFarmingtip=data;\n      });\n  }\n\n}\n","<html>\n<head>\n<style>\n#customers {\n  font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#customers td, #customers th {\n  border: 1px solid #ddd;\n  padding: 30px;\n  \n}\n\n#customers tr:nth-child(even){background-color: #f2f2f2;}\n\n#customers tr:hover {background-color: rgb(234, 236, 86);}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: left;\n  background-color: #4CAF50;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n\n  <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n    <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <mat-toolbar color=\"primary\">\n    <span><img src=\"./assets/images/quicktips.jpg\" class=\"myimg\"></span>\n    <span >&nbsp; &nbsp;</span>\n    <span style=\"font-size:30px; font-family:Arial;\">View Farming Tips for You</span>\n  </mat-toolbar>\n  </mat-card>\n\n\n<table id=\"customers\">\n    <thead>\n      <tr>\n      <th>Id</th>\n      <th>Tips Message</th>\n      \n    </tr>\n    </thead>\n      <tbody>\n       <tr *ngFor=\"let tips of allFarmingtip\">\n        <td style=\"font-size:20px;\">{{tips.id}}</td>\n         <td style=\"font-size:20px;\">{{tips.tipsMessage}}</td>\n      \n       </tr>\n       </tbody>\n     </table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>table works!</p>\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {Advertisement} from \"../farmermodel/advertisementmodel\";\nimport { Router } from '@angular/router';\nimport{ AdvertisementService} from '../farmerservice/advertisement.service';\nimport {MatTableModule} from '@angular/material/table';\n\n@Component({\n  selector: 'app-viewadvertisement',\n  templateUrl: './viewadvertisement.component.html',\n  styleUrls: ['./viewadvertisement.component.scss']\n})\nexport class ViewadvertisementComponent implements OnInit {\n\n  //datasource;\n  advertisements: Advertisement[] ;\n  //displayedColumns: string[] = ['id', 'cropname', 'quantity'];\n  \n  \n  constructor(private router:Router, private advertisementService : AdvertisementService) { \n    \n  }\n\n  ngOnInit() {\n    this.advertisementService.getAllAdvertisements()\n    .subscribe(data=>{\n      this.advertisements=data;\n    })\n  }\n\n}\n","<html>\n<head>\n<style>\n#customers {\n  font-family:  Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#customers td, #customers th {\n  border: 4px solid #ddd;\n  padding: 8px;\n}\n\n#customers tr:nth-child(even){background-color: #f2f2f2;}\n\n#customers tr:hover {background-color: rgb(174, 224, 94);}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: center;\n  background-color: #4CAF50;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n\n<div class=\"col-md-6\">\n  <mat-card>\n  <mat-toolbar color=\"primary\">\n    <span><img src=\"./assets/images/ad.svg\" height=\"80px\" width=\"100px\"></span>\n    <span>&nbsp;</span>\n    View Advertisement\n    <span class=\"flex-spacer\"></span>\n  </mat-toolbar>\n</mat-card>\n  <table id=\"customers\">\n    <thead>\n    <tr>\n      <th  class=\"hidden\">Crop Id</th>\n      <th >Crop Name</th>\n      <th >Quantity</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let ad of advertisements\">\n      <td class=\"hidden\">{{ad.id}}</td>\n      <td>{{ad.cropname}}</td>\n      <td>{{ad.quantity}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\"> -->\n\n  \n\n  <!-- Position Column -->\n  <!-- <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container> -->\n\n  <!-- Name Column -->\n  <!-- <ng-container matColumnDef=\"cropname\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.cropname}} </td>\n  </ng-container> -->\n\n  <!-- Weight Column -->\n  <!-- <ng-container matColumnDef=\"quantity\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n  </ng-container> -->\n\n  <!-- Symbol Column -->\n<!-- \n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table> -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container footer\" \n    fxLayout=\"row wrap\" \n    fxLayout.lt-md=\"column\" \n    fxLayoutAlign=\"center center\" \n    fxLayoutGap=\"10px\">\n\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\">\n    <div fxLayout=\"row\">\n      <div fxFlex=\"40\" fxFlexOffset=\"20px\">\n        <h4>Links</h4>\n        <mat-list>\n          <mat-list-item><a mat-button routerLink=\"/home\" routerLinkActive=\"active\">Home</a></mat-list-item>\n          <mat-list-item><a mat-button routerLink=\"/aboutus\" routerLinkActive=\"active\">About</a></mat-list-item>\n          <mat-list-item><a mat-button routerLink=\"/contactus\" routerLinkActive=\"active\">Contact</a></mat-list-item>\n        </mat-list>\n      </div>\n      <div fxFlex=\"55\">\n        <h4>Our Address</h4>\n        <address style=\"text-size: 80%\">\n          121, EPIP Block<br> Whitefield,Bangalore<br> INDIA<br>\n          <i class=\"fa fa-phone\"></i>: +91 1234 5678 00<br>\n          <i class=\"fa fa-fax\"></i>: +91 8765 4321 00<br>\n          <i class=\"fa fa-envelope\"></i>:\n          <a href=\"mailto:connect@fas.net\">connect@fas.net</a>\n        </address>\n      </div>\n    </div>\n  </div>\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"45\">\n    <div style=\"text-align:center\">\n      <a mat-icon-button class=\"btn-google-plus\" href=\"http://google.com/+\"><i class=\"fa fa-google-plus fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i class=\"fa fa-facebook fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i class=\"fa fa-linkedin fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-twitter\" href=\"http://twitter.com/\"><i class=\"fa fa-twitter fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-youtube\" href=\"http://youtube.com/\"><i class=\"fa fa-youtube fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-mail\" href=\"mailto:\"><i class=\"fa fa-envelope-o fa-lg\"></i></a>\n    </div>\n  </div>\n  <div>\n      <p>© Copyright 2020 Farming Assistant System</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { getCurrencySymbol } from '@angular/common';\nimport { mixinColor } from '@angular/material/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n     <span><img src=\"./assets/images/fasicon.png\" height=\"100px\" width=\"100px\"></span>\n    <a mat-button routerLink=\"/home\" routerLinkActive=\"active\"><span class=\"fa fa-home fa-lg\"></span> Home</a>\n    <a mat-button routerLink=\"/aboutus\" routerLinkActive=\"active\"><span class=\"fa fa-info fa-lg\"></span> About</a>\n    <a mat-button routerLink=\"/contactus\" routerLinkActive=\"active\"><span class=\"fa fa-address-card fa-lg\"></span> Contact</a>\n  </mat-toolbar>\n\n  <div class=\"container jumbotron\"\n  fxLayout=\"row\"\n  fxLayout.sm=\"column\" \n  fxLayout.xs=\"column\" \n  fxLayoutAlign.xs=\"start center\"\n  fxLayoutAlign.sm=\"start center\" \n  fxLayoutAlign=\"center center\"\n  fxLayoutGap=\"10px\">\n  \n    <div fxFlex fxFlex.gt-sm=\"60%\">\n      <h1 style=\"font-size:50px;\">Farming Assistant System</h1>\n      <p style=\"font-size:20px;\"> We take inspiration from the farmers, and created a unique application\n      to help the farmers working with the motive of greater profitability by direct communication \n      between farmer to supplier and supplier to farmer.\n    </p>\n    </div>\n\n    <div fxFlex fxFlex.gt-sm=\"40%\" >\n        <img  src=\"./assets/images/farmergrow.jpg\" alt=\"Logo\" height=500 width=700>\n    </div> \n    \n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user = {username: '', password: '', remember: false};\n  constructor(public dialogRef: MatDialogRef<LoginComponent>) { }\n\n  ngOnInit(): void {\n  }\n  \n  onSubmit() {\n    console.log('User: ', this.user);\n    this.dialogRef.close();\n  }\n}\n","<mat-toolbar color=\"primary\">\n    Login\n  <span class=\"flex-spacer\"></span>\n  <button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n\n<form novalidate #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n  <mat-dialog-content>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Username\" type=\"text\" [(ngModel)]=\"user.username\" name=\"username\"  #username=\"ngModel\" required>\n        <mat-error *ngIf=\"username.errors?.required\">Username is required</mat-error>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Password\" type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\" required>\n        <mat-error *ngIf=\"password.errors?.required\">Password is required</mat-error>\n      </mat-form-field>\n    </p>\n      <mat-checkbox [(ngModel)]=\"user.remember\" name=\"remember\">Remember Me</mat-checkbox>\n    \n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <span class=\"flex-spacer\"></span>\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button  mat-raised-button=\"primary\" type=\"submit\" mat-button class=\"background-primary text-floral-white\" [disabled]=\"loginForm.form.invalid\">Login</button>\n  </mat-dialog-actions>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginMenu } from '../shared/loginmenu';\nimport { LoginmenuService } from '../services/loginmenu.service';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\nloginmenus: LoginMenu[];\n\nselectedUser: LoginMenu;\n\n  constructor(private loginmenuService: LoginmenuService) { }\n\n  ngOnInit(){\n    this.loginmenus = this.loginmenuService.getUsers();\n  }\n\n  onSelect(login: LoginMenu) {\n    this.selectedUser = login;\n  }\n\n}\n","<div class=\"container\"\n     fxLayout=\"column\"\n     fxLayoutGap=\"10px\">\n\n     <div fxFlex>\n       <mat-card >\n        <mat-toolbar color=\"primary\">\n          <mat-icon>menu</mat-icon>\n        <div>\n          <span> &nbsp; &nbsp; </span>\n         <span style=\"font-size:30px; font-family:Arial;\">Menu</span>\n        </div>\n      </mat-toolbar>\n      </mat-card>\n      \n      </div>\n    \n  <div fxFlex>\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n        <mat-grid-tile *ngFor=\"let loginmenu of loginmenus\" [routerLink]=\"['/userdetail', loginmenu.id]\" appHighlight>\n            <img height=\"400px\" src={{loginmenu.image}} alt={{loginmenu.name}}>\n        <mat-grid-tile-footer>\n          <h1 >{{loginmenu.name | uppercase}} (Login/Register Menu)</h1>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { AboutUs } from '../shared/aboutus';\nimport { ABOUTUSS } from '../shared/aboutuss';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AboutusService {\n\n  constructor() { }\n  getAboutUss(): AboutUs[] {\n    return ABOUTUSS;\n  }\n\n  getABoutUs(id: string): AboutUs {\n   return ABOUTUSS.filter((aboutus) => (aboutus.id === id))[0];\n}\n\n     getFeaturedLeader(): AboutUs {\n     return ABOUTUSS.filter((aboutus) => aboutus.featured)[0];\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginMenu } from '../shared/loginmenu';\nimport { LOGINMENUS } from '../shared/loginmenus';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginmenuService {\n\n  getUsers(): LoginMenu[] {\n    return LOGINMENUS;\n  }\n  getUser(id: string) : LoginMenu{\n    return LOGINMENUS.filter((login) =>(login.id === id))[0];\n}\n\n  constructor() { }\n}\n","import { AboutUs } from './aboutus';\r\n\r\n\r\n\r\nexport const ABOUTUSS: AboutUs[] = [\r\n    {\r\n        id: '0',\r\n        name: 'Harshit Joshi',\r\n        featured: true\r\n    },\r\n    {\r\n        id: '1',\r\n        name: 'Gaurav Mohanty',\r\n        featured: true\r\n    },\r\n    {\r\n        id: '2',\r\n        name: 'Manoj Kumar M',\r\n        featured: true\r\n\r\n    },\r\n    {\r\n        id: '3',\r\n        name: 'Yash Raj',\r\n        featured: true\r\n\r\n    },\r\n    { \r\n        id: '4',\r\n        name: 'Reema Kumari',\r\n        featured: true\r\n\r\n    }\r\n];","import { LoginMenu } from './loginmenu';\r\n\r\nexport const LOGINMENUS: LoginMenu[] = [\r\n    { \r\n      id: '0',\r\n      name: 'Farmer',\r\n      image: './assets/images/fas.jpg',\r\n      featured: true\r\n    },{\r\n      id: '1',\r\n      name: 'Supplier',\r\n      image: './assets/images/supplier.jpg',\r\n      featured: true\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Admin',\r\n      image: './assets/images/admin.jpg',\r\n      featured: true\r\n    }\r\n  ];","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {MatChipsModule} from '@angular/material/chips';\nimport { Advertisement } from 'src/app/farmer/farmermodel/advertisementmodel';\nimport { FormGroup, FormControl, Validators, FormBuilder,NgForm }  from '@angular/forms';\nimport { Router } from '@angular/router';\nimport{ AdvertisementService} from 'src/app/farmer/farmerservice/advertisement.service';\n\n\n@Component({\n  selector: 'app-addadvertisement',\n  templateUrl: './addadvertisement.component.html',\n  styleUrls: ['./addadvertisement.component.scss']\n})\nexport class AddadvertisementComponent implements OnInit {\n  message:string;\n \n  constructor(private formBuilder : FormBuilder,private router:Router, private advertisementService : AdvertisementService) { }\naddForm:FormGroup;\n  ngOnInit(): void {\n    this.addForm=this.formBuilder.group({\n      id:[],\n      cropname:[],\n      quantity:[]\n    })\n\n  }\n\n  onSubmit() {\n    \n  this.advertisementService.createAdvertisement(this.addForm.value).subscribe(data => {\n    console.log('Post created successfully!');\n    alert(\"Crops added successfully.\")\n       }),error => {\n   alert(\"Fields can not be empty\")\n      }\n}\n\n}\n","\n<div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n  <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n  <mat-toolbar color=\"primary\">\n  <span><img src=\"./assets/images/ad.svg\" height=\"95px\" width=\"100px\"></span>\n  <span >&nbsp; &nbsp;</span>\n  <span >Add Advertisement</span>\n</mat-toolbar>\n\n\n\n\n    <form [formGroup]=\"addForm\" >\n      \n      <div layout=\"row\">\n        <div layout=\"column\" layout-padding=\"\" style=\"min-height: 50px;\">\n          <!-- <div>\n      <mat-chip-list class=\"mat-chip-list-stacked\" aria-label=\"Color selection\">\n        <mat-chip selected color=\"primary\">\n          Crop ID\n        </mat-chip>\n      </mat-chip-list>\n    </div> -->\n    \n      <!-- <div class=\"form-group\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Crop ID : </mat-label>\n        <input matInput formControlName=\"id\" placeholder=\"Crop Id\" name=\"id\" class=\"form-control\" id=\"id\">\n        <mat-hint>Hint : 5670</mat-hint>\n        </mat-form-field>\n      </div> -->\n    </div>\n    \n      <mat-chip-list class=\"mat-chip-list-stacked\" aria-label=\"Color selection\">\n        <mat-chip selected color=\"accent\">\n          Crop Name\n        </mat-chip>\n      </mat-chip-list>    \n      <div class=\"form-group\" class=\"full-width\">\n        <mat-form-field appearance=\"outline\">\n         <mat-label>Crop Name : </mat-label>\n           <input matInput  formControlName=\"cropname\" onkeypress=\"return (event.charCode > 64 && \n           event.charCode < 91) || (event.charCode > 96 && event.charCode < 123)\"\n            placeholder=\"Crop Name\" name=\"cropname\" class=\"form-control\" id=\"cropname\" required>\n          <mat-hint>Hint : Enter only in characters</mat-hint>\n        </mat-form-field>\n      </div>\n\n      <mat-chip-list class=\"mat-chip-list-stacked\" aria-label=\"Color selection\">\n        <mat-chip selected color=\"accent\">\n          Crop Quantity\n        </mat-chip>\n      </mat-chip-list>\n      <div class=\"form-group\" class=\"full-width\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Crop Quantity : </mat-label>\n        <input matInput  type=\"number\" min=\"1\" max=\"100\" formControlName=\"quantity\" placeholder=\"Quantity\" name=\"quantity\" class=\"form-control\" id=\"quantity\" required>\n        <mat-hint>Hint : Enter only in numbers</mat-hint>\n      </mat-form-field>\n      </div>\n  \n   \n      <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Save</button>\n    \n    </div>\n    </form>\n  </mat-card>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder }  from '@angular/forms';\nimport { Router } from '@angular/router';\nimport{ AdvertisementService} from 'src/app/farmer/farmerservice/advertisement.service';\nimport { Advertisement } from 'src/app/farmer/farmermodel/advertisementmodel';\n\n@Component({\n  selector: 'app-deleteadvertisement',\n  templateUrl: './deleteadvertisement.component.html',\n  styleUrls: ['./deleteadvertisement.component.scss']\n})\nexport class DeleteadvertisementComponent implements OnInit {\n\n  advertisements: Advertisement[] ;\n  message:string;\n\n  constructor(private router:Router, private advertisementService : AdvertisementService) { }\n\n  ngOnInit(){\n    this.advertisementService.getAllAdvertisements()\n    .subscribe(data=>{\n      this.advertisements=data;\n    })\n  }\n  deleteAdvertisement(id){\n    this.advertisementService.deleteAdvertisement(id)\n    .subscribe(()=> this.message = \"Advertisemenrt Deleted Successfully!\");\n    \n    this.router.navigate(['list-advertisement']);\n  }\n\n}\n","<html>\n<head>\n<style>\n#customers {\n  font-family: Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n  \n  font-variant-caps: all-petite-caps;\n  font-size: 100%;\n}\n\n#customers td, #customers th {\n  border: 3px solid rgb(49, 160, 45);\n  padding: 8px;\n}\n\n#customers tr:nth-child(even){background-color: #ffffff;}\n\n#customers tr:hover {background-color: #abd65a;}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: center;\n  background-color: #4CAF50;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n\n\n  <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n    <mat-card fxLayout=\"column\" fxLayoutGap=\"20px\">\n    <mat-toolbar color=\"primary\">\n    <span><img src=\"./assets/images/ad.svg\" height=\"90px\" width=\"100px\"></span>\n    <span >&nbsp; &nbsp; &nbsp; &nbsp;</span>\n    <span >Delete Advertisements</span>\n  </mat-toolbar>\n\n\n\n\n\n\n    <table class=\"table table-bordered table-striped\" id=\"customers\">\n      <thead>\n      <tr>\n        <th class=\"hidden\">Crop Id</th>\n        <th>Crop Name</th>\n        <th>Quantity</th>\n        <th>Action</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let ad of advertisements\">\n        <td class=\"hidden\">{{ad.id}}</td>\n        <td>{{ad.cropname}}</td>\n        <td>{{ad.quantity}}</td>\n        <td>\n        <div class=\"btn-group btn-group-sm\">\n        \n        <button mat-raised-button color=\"primary\" [routerLink]=\"['/deleteadvertisement']\" (click)=\"deleteAdvertisement(ad.id)\" >Delete</button>\n        </div></td>\n      </tr>\n      </tbody>\n    </table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { CropserviceService } from 'src/app/farmer/farmercrop/cropservice.service';\nimport { Router } from '@angular/router';\nimport { CropsModel } from 'src/app/shared/crops';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-buycrop',\n  templateUrl: './buycrop.component.html',\n  styleUrls: ['./buycrop.component.scss']\n})\nexport class BuycropComponent implements OnInit {\n\n  crop;\n  constructor(private cs:CropserviceService,private router:Router) {\n    this.crop=history.state.crops;\n   }\n\n   buyCrop(){\n    this.deleteCrop(this.crop.id);\n    this.cs.buyCrops(this.crop).subscribe(()=>{alert(\"Bought Successfully..\")\n  this.router.navigate(['/buyHome'])\n})\n }\n deleteCrop(cropId){\n  this.cs.deleteCrop(cropId).subscribe(()=>{\n history.go()\n });\n\n}\n\n\n  ngOnInit(): void {\n  }\n}\n","\n    <!-- <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <mat-toolbar color=\"primary\">\n    <span><img src=\"/assets/images/tranico.png\" height=\"90px\" width=\"100px\"></span>\n    <span >&nbsp; &nbsp;</span>\n    <span>Welcome to Buy Crops Page</span>\n    </mat-toolbar>\n    </mat-card> -->\n    <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n        <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n        <mat-toolbar color=\"primary\">\n        <span >&nbsp; &nbsp;</span>\n        <span >Buy Crops</span>\n      </mat-toolbar>\n</mat-card>\n\n\n<div class=\"jumbotron\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n\n\n<div class=\"form-group\">\n    <mat-form-field appearance=\"legacy\">\n        <mat-label>Crop ID:</mat-label>\n   <input matInput type=\"number\"  placeholder=\"Crop ID\" class=\"form-control\" [(ngModel)]=\"crop.id\" required>\n   <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n</mat-form-field>\n</div>\n\n<div class=\"form-group\">\n<mat-form-field appearance=\"legacy\">\n    <mat-label>Crop Name :</mat-label>\n<input  matInput type=\"text\" placeholder=\"Crop Name\" class=\"form-control\" [(ngModel)]=\"crop.name\" required>\n<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n</mat-form-field>\n</div>\n\n\n<div class=\"form-group\">\n<mat-form-field appearance=\"legacy\">\n    <mat-label>Crop Price</mat-label>\n<input matInput type=\"number\" class=\"form-control\" [(ngModel)]=\"crop.price\">\n<span matPrefix>$&nbsp;</span>\n<span matSuffix>.00</span>\n</mat-form-field>\n</div>\n\n<div class=\"form-group\">\n<mat-form-field appearance=\"fill\">\n<mat-label>Crop Price</mat-label>\n<input matInput type=\"number\" class=\"form-control\"[(ngModel)]=\"crop.quantity\">\n<mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n</mat-form-field>\n<br>\n<button mat-raised-button (click)=\"buyCrop()\" class=\"btn btn-info\" type=\"submit\" [routerLink]=\"['/buytransaction']\">Buy</button>\n\n</div>\n\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CropserviceService } from 'src/app/farmer/farmercrop/cropservice.service';\nimport { Router } from '@angular/router';\nimport { CropsModel } from 'src/app/shared/crops';\n\n@Component({\n  selector: 'app-buycrophome',\n  templateUrl: './buycrophome.component.html',\n  styleUrls: ['./buycrophome.component.scss']\n})\nexport class BuycrophomeComponent implements OnInit {\n\n  crops;\n  \n    constructor(private cs: CropserviceService,private router:Router) { \n      cs.getAll().subscribe((res)=>this.crops=res);\n    }\n \n  \n\n    ngOnInit() {\n    \n\n    }\n}\n","<html>\n<head>\n<style>\n#customers {\n  font-family: \"Trebuchet MS\", Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#customers td, #customers th {\n  border: 5px solid #ddd;\n  padding: 8px;\n}\n\n#customers tr:nth-child(even){background-color: #f2f2f2;}\n\n#customers tr:hover {background-color: rgb(175, 231, 101);}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: left;\n  background-color: #4CAF50;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n    <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n        <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <mat-card>\n        <mat-toolbar color=\"primary\">\n        <span><img src=\"./assets/images/home.jpg\" height=\"90px\" width=\"100px\"></span>\n        <span >&nbsp; &nbsp;</span>\n        <span >Welcome to Crops Buying Home Page</span>\n      </mat-toolbar>\n    </mat-card>\n\n    <mat-card>\n    <p >These are the details of all the available crops </p>\n   </mat-card> \n</mat-card>\n</div>\n \n<table class='table' id=\"customers\">\n    <tr>\n        <th>Farmer ID</th>\n        <th>Name</th>\n        <th>Price</th>\n        <th>Quantity</th>\n    </tr>\n    <tr *ngFor=\"let crop of crops\">\n        <td>{{crop.id}}</td>\n         <td>{{crop.name}}</td>\n         <td>{{crop.price}}</td>\n         <td>{{crop.quantity}}</td>\n         <td><button mat-raised-button [routerLink]=\"['/buycrop']\" [state]=\"{crops: crop}\" class=\"btn btn-info\">Buy</button></td>\n         \n    </tr>\n</table>\n\n<button mat-raised-button routerLink=\"/buytransaction\" >See Transaction History</button>\n","import { Component, OnInit } from '@angular/core';\nimport { CropserviceService } from 'src/app/farmer/farmercrop/cropservice.service';\nimport { Router } from '@angular/router';\nimport { CropsModel } from 'src/app/shared/crops';\n\n@Component({\n  selector: 'app-buytransaction',\n  templateUrl: './buytransaction.component.html',\n  styleUrls: ['./buytransaction.component.scss']\n})\nexport class BuytransactionComponent implements OnInit {\n\n  crops;\n  constructor(private cs:CropserviceService,private router:Router) {\n    cs.getBuyAll().subscribe((res)=>this.crops=res);\n   }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<html>\n<head>\n<style>\n#customers {\n  font-family: Arial, Helvetica, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\n#customers td, #customers th {\n  border: 1px solid #ddd;\n  padding: 8px;\n}\n\n#customers tr:nth-child(even){background-color: #f2f2f2;}\n\n#customers tr:hover {background-color: rgb(150, 216, 111);}\n\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-right: 30px;\n  text-align: center;\n  background-color: #4CAF50;\n  color: white;\n}\n</style>\n</head>\n<body>\n\n\n    <div  fxLayout=\"column\" fxLayoutAlign=\"space-around none\">\n        <mat-card fxLayout=\"column\" fxLayoutGap=\"30px\">\n    <mat-card>\n        <mat-toolbar color=\"primary\">\n        <span><img src=\"./assets/images/tranico.png\" height=\"90px\" width=\"100px\"></span>\n        <span >&nbsp; &nbsp;</span>\n        <span >Welcome to Crops Transaction Page</span>\n      </mat-toolbar>\n    </mat-card>\n\n    <mat-card>\n    <p >These are the details of all the available transactions </p>\n   </mat-card> \n</mat-card>\n</div>\n \n<table class='table' id=\"customers\">\n    <tr>\n        <th>Name</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Sold To -Farmer ID</th>\n    </tr>\n    <tr *ngFor=\"let crop of crops\">\n        <td>{{crop.name}}</td>\n         <td>{{crop.price}}</td>\n         <td>{{crop.quantity}}</td>\n         <td>{{crop.id}}</td>\n         <td><button mat-raised-button [routerLink]=\"['/suppliercropmenu']\">Home</button></td>\n         \n    </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { SupplierCropMenu } from '../suppliercropmenu/suppliercropmenu';\nimport { SUPPLIERSCROPMENUS } from '../suppliercropmenu/suppliercropmenus';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-suppliercropmenu',\n  templateUrl: './suppliercropmenu.component.html',\n  styleUrls: ['./suppliercropmenu.component.scss']\n})\nexport class SuppliercropmenuComponent implements OnInit {\n\n  cropmenus: SupplierCropMenu[];\n\nselectecropMenu: SupplierCropMenu;\n\n  constructor(private _router : Router) { }\n\n  ngOnInit(){\n    this.cropmenus = this.getmenus();\n  }\n\n  onSelect(menuoption: SupplierCropMenu) {\n    this.selectecropMenu = menuoption;\n  }\n\n  openMenuOption(value) {\n    \n    if(value=== '1'){\n      this._router.navigate(['/buycrophome'])\n    }\n    if(value=== '2'){\n      this._router.navigate(['/buytransaction'])\n    }\n    \n  }\n\n  getmenus(): SupplierCropMenu[] {\n    return SUPPLIERSCROPMENUS;\n  }\n\n\n}\n","<div class=\"container\"\n     fxLayout=\"column\"\n     fxLayoutGap=\"10px\">\n\n     <div fxFlex>\n       <mat-card >\n        <mat-toolbar color=\"primary\">\n          <mat-icon>menu</mat-icon>\n          <span>&nbsp;</span>\n         <span> <h1>Buy Crops</h1> </span>\n      </mat-toolbar>\n      </mat-card>\n      \n      </div>\n    \n  <div fxFlex>\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let cropmenu of cropmenus\" (click)=\"openMenuOption(cropmenu.id)\" appHighlight>\n            <img height=\"300px\" src={{cropmenu.image}} alt={{cropmenu.name}}>\n        <mat-grid-tile-footer>\n          <h1 >{{cropmenu.name | uppercase}}</h1>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n</div>\n","import { SupplierCropMenu } from './suppliercropmenu';\r\n\r\nexport const SUPPLIERSCROPMENUS: SupplierCropMenu[] = [\r\n   {\r\n      id: '1',\r\n      name: 'Buy Crop Home',\r\n      image: './assets/images/buy crop.jpg',\r\n      featured: true\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Buy Transaction',\r\n      image: './assets/images/transaction.png',\r\n      featured: true\r\n    }\r\n  ];","import { Component, OnInit } from '@angular/core';\nimport { SupplierMenu } from './suppliermenu';\nimport { SuppliermenuService } from '../supplierservice/suppliermenu.service';\nimport { Router } from '@angular/router';\nimport { DeleteadvertisementComponent } from '../deleteadvertisement/deleteadvertisement.component';\n\n@Component({\n  selector: 'app-supplierhome',\n  templateUrl: './supplierhome.component.html',\n  styleUrls: ['./supplierhome.component.scss']\n})\nexport class SupplierhomeComponent implements OnInit {\n\n  suppliermenu: SupplierMenu;\n\n  suppliermenus: SupplierMenu[];\n\n  selectedMenu: SupplierMenu;\n\n  constructor(private menuService : SuppliermenuService,private _router : Router) { }\n\n  ngOnInit(): void {\n    this.suppliermenus = this.menuService.getMenus();\n  }\n\n  onSelect(menu: SupplierMenu) {\n    this.selectedMenu = menu;\n  }\n\n  openMenuOption(value) {\n    if(value=== '0'){\n      this._router.navigate(['/addadvertisement'])\n    }\n    if(value=== '1'){\n      this._router.navigate(['/suppliercropmenu'])\n    }\n    if(value=== '2'){\n      this._router.navigate(['/deleteadvertisement'])\n    }\n  }\n\n}\n","<div class=\"container\"\n     fxLayout=\"column\"\n     fxLayoutGap=\"50px\">\n\n     <div fxFlex>\n      <mat-card >\n       <mat-toolbar color=\"primary\">\n         <mat-icon>menu</mat-icon>\n         <span>&nbsp; &nbsp; &nbsp;</span>\n        <span> <h1> Supplier's Menu</h1> </span>\n     </mat-toolbar>\n     </mat-card>\n     \n     </div>\n\n\n  <div fxFlex>\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n        <mat-grid-tile *ngFor=\"let suppliermenu of suppliermenus\"\n        (click)=\"openMenuOption(suppliermenu.id)\" appHighlight>\n            <img height=\"400px\" src={{suppliermenu.image}} alt={{suppliermenu.name}}>\n        <mat-grid-tile-footer>\n          <h1>{{suppliermenu.name | uppercase}}</h1>\n        </mat-grid-tile-footer>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"end end\" >\n    <button mat-raised-button  color=\"warn\" type=\"submit\" [routerLink]=\"['/home']\" >Logout</button>\n  </div>\n\n</div>\n\n","import { SupplierMenu } from './suppliermenu';\r\n\r\nexport const SUPPLIERMENUS: SupplierMenu[] = [\r\n    { \r\n      id: '0',\r\n      name: 'Add Advertisement',\r\n      image: './assets/images/advertisement.jpg',\r\n      featured: true\r\n    },{\r\n      id: '1',\r\n      name: 'View Crops Received',\r\n      image: './assets/images/viewcropsreceive.jpg',\r\n      featured: true\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Delete Advertisement',\r\n      image: './assets/images/delete.png',\r\n      featured: true\r\n    }\r\n  ];","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { SupplierregsiterService } from '../supplierregister/supplierregsiter.service';\nimport { SupplierModel } from '../suppliermodel/suppliermodel';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-supplierlogin',\n  templateUrl: './supplierlogin.component.html',\n  styleUrls: ['./supplierlogin.component.scss']\n})\nexport class SupplierloginComponent implements OnInit {\n\n  supplier = new SupplierModel();\n  message='';\n\n  userModel = {username: '', password: '', remember: false};\n  constructor(public dialogRef: MatDialogRef<SupplierloginComponent>\n    ,private _service : SupplierregsiterService\n    ,private _router : Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  onSubmit() {\n    this._service.loginSupplier(this.supplier).subscribe(\n      data =>{\n        console.log(\"response received\");\n        this._router.navigate(['/supplierhome'])\n        this.dialogRef.close();\n      },\n      error => {\n        console.log(\"exception occured\");\n        this.message=\"Hey! Please enter valid username and password\";\n      }\n\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n    Welcome Supplier,Login\n  <span class=\"flex-spacer\"></span>\n  <button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n\n<form novalidate #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n  <strong class=\"mat-subheading-1 accent-color\">{{message}}</strong>\n  <mat-dialog-content>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Supplier Userame\" type=\"text\" [(ngModel)]=\"supplier.supplierusername\" name=\"supplierusername\"  #supplierusername=\"ngModel\" required>\n        <mat-icon matSuffix>account_circle</mat-icon>\n        <mat-error *ngIf=\"supplierusername.errors?.required\">Username is required</mat-error>\n      </mat-form-field>\n    </p>\n    <p>\n      <mat-form-field>\n        <input matInput placeholder=\"Supplier Password\" type=\"password\" [(ngModel)]=\"supplier.supplierpassword\" name=\"supplierpassword\" #supplierpassword=\"ngModel\" required>\n        <mat-error *ngIf=\"supplierpassword.errors?.required\">Password is required</mat-error>\n      </mat-form-field>\n    </p>\n      <mat-checkbox [(ngModel)]=\"userModel.remember\" name=\"remember\">Remember Me</mat-checkbox>\n    \n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <span class=\"flex-spacer\"></span>\n    <div class=\"example-label\"></div>\n    <div class=\"example-button-row\">\n    <button mat-raised-button mat-dialog-close>Cancel</button>\n    <button  mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.form.invalid\">Login</button>\n    </div>\n  </mat-dialog-actions>\n</form>\n","export class SupplierModel {\r\n    supplierid:number;\r\n    suppliername:string;\r\n    supplierpassword:string;\r\n    supplieraddress:string;\r\n    supplierphoneno:string;\r\n    supplierusername:string;\r\n\r\n    constructor(){}\r\n}","import { Injectable } from '@angular/core';\nimport { SupplierModel } from '../suppliermodel/suppliermodel';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierregsiterService {\n\n  public errorMessage: string = '';\n\n  constructor(private _http : HttpClient) { }\n\n  public loginSupplier(supplier: SupplierModel):Observable<any>{\n    return this._http.post<any>(\"http://localhost:8686/register-service/registration/supplierlogin\",supplier);\n  }\n\n  public registerSupplier(supplier: SupplierModel):Observable<any>{\n    return this._http.post<any>(\"http://localhost:8686/register-service/registration/suppliersignup\",supplier);\n  }\n\n  public handleError = (error: HttpErrorResponse) => {\n    if(error.status === 500){\n      this.handle500Error(error);\n    }\n    else if(error.status === 404){\n      this.handle404Error(error)\n    }\n    else{\n     this.handleOtherError(error);\n    }\n  }\n\n  private handle500Error = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private handle404Error = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private handleOtherError = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n    \n  }\n\n  public createErrorMessage(error: HttpErrorResponse){\n    return this.errorMessage = error.error ? error.error : error.statusText;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SupplierMenu } from '../supplierhome/suppliermenu';\nimport { SUPPLIERMENUS } from '../supplierhome/suppliermenus';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuppliermenuService {\n\n  getMenus(): SupplierMenu[] {\n    return SUPPLIERMENUS;\n  }\n  getMenu(id: string) : SupplierMenu{\n    return SUPPLIERMENUS.filter((menu) =>(menu.id === id))[0];\n}\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-elements-example-dialog',\n  templateUrl: './dialog-elements-example-dialog.component.html',\n  styleUrls: ['./dialog-elements-example-dialog.component.scss']\n})\nexport class DialogElementsExampleDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Signed Up!</h1>\n<div mat-dialog-content>You have been registered.Congrats!</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl,FormsModule, ReactiveFormsModule,NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SupplierregsiterService } from '../supplierregister/supplierregsiter.service';\nimport { SupplierModel } from '../suppliermodel/suppliermodel';\nimport { Router } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { DialogElementsExampleDialogComponent } from '../suppliersignup/dialog-elements-example-dialog/dialog-elements-example-dialog.component';\n\n@Component({\n  selector: 'app-suppliersignup',\n  templateUrl: './suppliersignup.component.html',\n  styleUrls: ['./suppliersignup.component.scss']\n})\nexport class SuppliersignupComponent implements OnInit {\n\n    msg = '';\n    supplier = new SupplierModel();\n    //registerForm: FormGroup;\n    @ViewChild('registerForm') private registerForm: NgForm;\n    hide = true;\n\n  constructor(private formBuilder: FormBuilder,private _router : Router,private _service : SupplierregsiterService\n    ,private errorService: SupplierregsiterService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n      \n  }\n\n  \n\n  // convenience getter for easy access to form fields\n  onSubmit() {\n    this._service.registerSupplier(this.supplier).subscribe(\n      data =>{\n          console.log(\"response received\");\n          this.dialog.open(DialogElementsExampleDialogComponent);\n          this.registerForm.resetForm();\n          \n        },error => {\n          console.log(\"Exception occured\");\n          this.msg = this.errorService.createErrorMessage(error);\n        }  \n    )     \n}\n\n}\n\n\n\n","<mat-toolbar color=\"primary\">\n  Welcome Supplier,Sign Up!\n  <span class=\"flex-spacer\"></span>\n  <button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n\n<!-- main app container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n\n          <strong class=\"alert alert-danger\">{{msg}}</strong>\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Supplier Name :</mat-label>\n              <input matInput type=\"text\" class=\"form-control\" placeholder=\"Supplier Name\" name=\"suppliername\"\n                [(ngModel)]=\"supplier.suppliername\" #suppliername=\"ngModel\" required>\n              <mat-icon matSuffix>sentiment_satisfied_alt</mat-icon>\n              <div *ngIf=\"(suppliername.invalid && suppliername.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"suppliername.errors.required\">Full name is required.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Supplier Username :</mat-label>\n              <input matInput type=\"text\" class=\"form-control\" placeholder=\"Supplier Username\" name=\"supplierusername\"\n                [(ngModel)]=\"supplier.supplierusername\" #supplierusername=\"ngModel\" required>\n              <mat-icon matSuffix>account_circle</mat-icon>\n              <div *ngIf=\"(supplierusername.invalid && supplierusername.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"supplierusername.errors.required\">Username name is required.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Password :</mat-label>\n              <input matInput [type]=\"hide ? 'password' : 'text'\" class=\"form-control\" placeholder=\"Password\"  name=\"supplierpassword\"\n                [(ngModel)]=\"supplier.supplierpassword\" #supplierpassword=\"ngModel\" minlength=\"6\" required>\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </button>\n              <div *ngIf=\"supplierpassword.invalid && supplierpassword.touched\" class=\"alert alert-danger\">\n                <small *ngIf=\"supplierpassword.errors.required\">Password is required.</small>\n                <small *ngIf=\"supplierpassword.errors.minlength\">Password must be longer than 6 characters.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <!--<div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Confirm Password :</mat-label>\n              <input matInput placeholder=\"Confirm Password\" [type]=\"hide ? 'password' : 'text'\" name=\"confirmpassword\"\n                (ngModel)=\"farmer.farmerpassword\" #farmerpassword=\"ngModel\" required>\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </button>\n              <div class=\"alert alert-danger\">\n                <small *ngIf=\"confirmpassword.value != farmerpassword.value\">Password do not match</small>\n                <small *ngIf=\"confirmpassword.errors.required\">Password is required.</small>\n              </div>\n            </mat-form-field>\n          </div>-->\n\n          <div class=\"form-group\">\n            <mat-form-field>\n              <label>Supplier Address :</label>\n              <textarea matInput rows=\"10\" type=\"text\" name=\"supplieraddress\" [(ngModel)]=\"supplier.supplieraddress\"\n                #supplieraddress=\"ngModel\" required></textarea>\n                <div *ngIf=\"(supplieraddress.invalid && supplieraddress.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"supplieraddress.errors.required\">Supplier Address is required.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <div class=\"form-group\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Phone Number :</mat-label>\n              <input matInput placeholder=\"Phone Number\" type=\"tel\" name=\"supplierphoneno\" pattern=\"[0-9]*\"\n                [(ngModel)]=\"supplier.supplierphoneno\" #supplierphoneno=\"ngModel\" required />\n              <mat-icon matSuffix> call</mat-icon>\n              <div *ngIf=\"(supplierphoneno.invalid && supplierphoneno.touched)\" class=\"alert alert-danger\">\n                <small *ngIf=\"supplierphoneno.errors.required\">Phone number is required.</small>\n                <small *ngIf=\"supplierphoneno.errors.pattern\">Phone number is invalid.</small>\n              </div>\n            </mat-form-field>\n          </div>\n\n          <div class=\"example-label\"></div>\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" class=\"btn btn-primary\"\n              [disabled]=\"registerForm.invalid\">Sign Up</button>\n          </div>\n\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { LoginMenu } from '../shared/loginmenu';\n\nimport { LoginmenuService } from '../services/loginmenu.service';\n\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { FarmersignupComponent } from '../farmer/farmersignup/farmersignup.component';\nimport { FarmerloginComponent } from '../farmer/farmerlogin/farmerlogin.component';\nimport { AdminloginComponent } from '../admin/adminlogin/adminlogin.component';\nimport { SuppliersignupComponent } from '../supplier/suppliersignup/suppliersignup.component';\nimport { SupplierloginComponent } from '../supplier/supplierlogin/supplierlogin.component';\n\n\n@Component({\n  selector: 'app-userdetail',\n  templateUrl: './userdetail.component.html',\n  styleUrls: ['./userdetail.component.scss']\n})\nexport class UserdetailComponent implements OnInit {\n\n  \n  loginmenu: LoginMenu;\n\n  loginmenus: LoginMenu[];\n  selectedUser: LoginMenu;\n\n  constructor(private loginmenuservice : LoginmenuService,private route: ActivatedRoute,\n    private location: Location,public dialog: MatDialog) { }\n\n  ngOnInit(){ \n    const id = this.route.snapshot.params['id'];\n    this.loginmenu = this.loginmenuservice.getUser(id);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  openLoginForm(value) {\n    if(value=== '0'){\n    this.dialog.open(FarmerloginComponent, {width: '400px', height: '400px'});\n    }\n    if(value=== '1'){\n      this.dialog.open(SupplierloginComponent, {width: '500px', height: '400px'});\n    }\n    if(value=== '2'){\n      this.dialog.open(AdminloginComponent, {width: '500px', height: '400px'});\n    }\n  }\n\n  openSignupForm(value) {\n    if(value=== '0'){\n    this.dialog.open(FarmersignupComponent, {width: '400px', height: '830px'});\n    }\n    if(value=== '1'){\n      this.dialog.open(SuppliersignupComponent,{width: '400px', height: '790px'});\n    }\n  }\n\n  onSelect(login: LoginMenu) {\n    this.selectedUser = login;\n  }\n\n}\n","<div class=\"container\"\n    fxLayout=\"row\"\n    fxLayout.sm=\"column\"\n    fxLayout.xs=\"column\"\n    fxLayoutAlign.gt-md=\"space-around center\"\n    fxLayoutGap=\"10px\" \n    fxLayoutGap.xs=\"0\">\n\n    \n\n  <div fxFlex=\"40\">\n    <p><mat-card *ngIf=\"loginmenu\" class=\"example-card\">\n      <mat-card-header>\n        <mat-card-title *ngFor=\"let loginmenu of loginmenus\">\n          <h3>{{loginmenu.name | uppercase}}</h3>\n        </mat-card-title>\n      </mat-card-header>\n      <img mat-card-image src={{loginmenu.image}} alt={{loginmenu.name}}>\n      <mat-card-actions>\n        \n        <div class=\"example-button-row\">\n        <button mat-raised-button color mat-button (click)=\"goBack()\">Previous</button>\n        <span class=\"flex-spacer\"></span>\n        <button mat-raised-button color=\"primary\" (click)=\"openLoginForm(loginmenu.id)\">Login</button>\n        <button mat-raised-button color=\"primary\" (click)=\"openSignupForm(loginmenu.id)\" mat-button>Signup</button>\n      </div>\n      </mat-card-actions>\n    </mat-card></p>\n  </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}